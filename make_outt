Starting build..this may take a while..
Compiling bwa-mem2...
Compiling fmi...
cd tools/bwa-mem2; make CXX=g++ arch=avx2 VTUNE_HOME=
make[1]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/bwa-mem2'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/bwa-mem2'
cd benchmarks/fmi; make CXX=g++ arch=avx2 VTUNE_HOME=
make[1]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/fmi'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/fmi'
cd benchmarks/bsw; make CXX=g++ arch=avx2 VTUNE_HOME=
make[1]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/bsw'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/bsw'
cd benchmarks/dbg; make CXX=g++ arch=avx2 VTUNE_HOME=
make[1]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/dbg'
g++ debruijn.cpp common.cpp ../../tools/htslib/libhts.a -g -Wall -O2 -fopenmp -I../../tools/htslib -L../../tools/htslib -lcurl -lcrypto -lz -lm -lbz2 -llzma -lpthread -ldl -fopenmp -o dbg
debruijn.cpp: In function ‘char _getBase(uint8_t*, int)’:
debruijn.cpp:28:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   28 |     char* baseLookup = "=ACMGRSVTWYHKDBN";
      |                        ^~~~~~~~~~~~~~~~~~
debruijn.cpp: In function ‘int detectCyclesInGraph(DeBruijnGraph*, double)’:
debruijn.cpp:1044:9: warning: variable ‘reachedEnd’ set but not used [-Wunused-but-set-variable]
 1044 |     int reachedEnd = 0;
      |         ^~~~~~~~~~
debruijn.cpp: In function ‘void logPath(Path*, char*, int)’:
debruijn.cpp:1248:9: warning: unused variable ‘startPos’ [-Wunused-variable]
 1248 |     int startPos = thePath->nodes->elements[0]->position;
      |         ^~~~~~~~
debruijn.cpp:1249:11: warning: variable ‘theNode’ set but not used [-Wunused-but-set-variable]
 1249 |     Node* theNode;
      |           ^~~~~~~
debruijn.cpp: In function ‘void loadReadIntoGraph(alignedRead*, DeBruijnGraph*, int, int)’:
debruijn.cpp:1328:9: warning: unused variable ‘startPos’ [-Wunused-variable]
 1328 |     int startPos = theRead->pos;
      |         ^~~~~~~~
debruijn.cpp: In function ‘void assembleReadsAndDetectVariants(int, int, alignedRead*, alignedRead*, char*)’:
debruijn.cpp:1394:9: warning: unused variable ‘minMapQual’ [-Wunused-variable]
 1394 |     int minMapQual = 20;
      |         ^~~~~~~~~~
debruijn.cpp:1395:9: warning: unused variable ‘largestVariant’ [-Wunused-variable]
 1395 |     int largestVariant = 1500;
      |         ^~~~~~~~~~~~~~
debruijn.cpp:1400:9: warning: unused variable ‘minWeight’ [-Wunused-variable]
 1400 |     int minWeight = minReads*minQual;
      |         ^~~~~~~~~
debruijn.cpp: In function ‘int main(int, char**)’:
debruijn.cpp:1561:33: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘std::vector<Batch>::size_type’ {aka ‘long unsigned int’} [-Wformat=]
 1561 |         fprintf(stderr, "Found %d batches. Running with threads: %d\n", batches.size(), numThreads);
      |                                ~^                                       ~~~~~~~~~~~~~~
      |                                 |                                                   |
      |                                 int                                                 std::vector<Batch>::size_type {aka long unsigned int}
      |                                %ld
debruijn.cpp:1573:27: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<Batch>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
 1573 |         for (int i = 0; i < batches.size(); i++) {
      |                         ~~^~~~~~~~~~~~~~~~
debruijn.cpp:1592:23: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<Batch>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
 1592 |     for (int i = 0; i < batches.size(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~
common.cpp: In function ‘char _getBase(uint8_t*, int)’:
common.cpp:15:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   15 |     char* baseLookup = "=ACMGRSVTWYHKDBN";
      |                        ^~~~~~~~~~~~~~~~~~
common.cpp: In function ‘alignedRead* getRead(alignedRead*, bam1_t*)’:
common.cpp:104:17: warning: comparison of integer expressions of different signedness: ‘int’ and ‘uint32_t’ {aka ‘unsigned int’} [-Wsign-compare]
  104 |     for (i=0 ;i < c->n_cigar; i++){
      |               ~~^~~~~~~~~~~~
common.cpp: In function ‘void setWindowPointers(ReadArray*, int, int)’:
common.cpp:181:93: warning: comparison of integer expressions of different signedness: ‘uint32_t’ {aka ‘unsigned int’} and ‘int’ [-Wsign-compare]
  181 |         while (startPosOfReads < readArray->__size && readArray->array[startPosOfReads].end <= start) {
      |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
common.cpp: In function ‘int bisectReadsLeft(alignedRead*, int, int, int)’:
common.cpp:210:32: warning: comparison of integer expressions of different signedness: ‘uint32_t’ {aka ‘unsigned int’} and ‘int’ [-Wsign-compare]
  210 |             if (reads[mid].pos < testPos) {
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~
common.cpp:218:36: warning: comparison of integer expressions of different signedness: ‘uint32_t’ {aka ‘unsigned int’} and ‘int’ [-Wsign-compare]
  218 |             if (reads[mid].matePos < testPos) {
      |                 ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
make[1]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/dbg'
cd tools/GKL; ./gradlew test
> Task :compileJava UP-TO-DATE
> Task :cmakeConfig UP-TO-DATE

> Task :cmakeBuild
make[1]: warning: jobserver unavailable: using -j1.  Add '+' to parent make rule.
configure.ac:23: installing 'build-aux/compile'
configure.ac:12: installing 'build-aux/missing'
Makefile.am: installing 'build-aux/depcomp'

> Task :copyNativeLib UP-TO-DATE
> Task :processResources UP-TO-DATE
> Task :classes UP-TO-DATE
> Task :buildOnMac SKIPPED
> Task :compileTestJava UP-TO-DATE
> Task :processTestResources UP-TO-DATE
> Task :testClasses UP-TO-DATE

> Task :test
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)
WARNING in native method: JNI call made without checking exceptions when required to from CallStaticObjectMethod
	at sun.management.DiagnosticCommandImpl.getDiagnosticCommandInfo(Native Method)
	at sun.management.DiagnosticCommandImpl.getMBeanInfo(DiagnosticCommandImpl.java:165)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(DefaultMBeanServerInterceptor.java:333)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:319)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:889)
	at java.lang.management.ManagementFactory$3.run(ManagementFactory.java:884)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.lang.management.ManagementFactory.addDynamicMBean(ManagementFactory.java:884)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:491)
	- locked <0x00000000e21bdba8> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:145)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:503)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:562)
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:578)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:214)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:145)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)
	at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)
	at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455)
	at com.intel.gkl.IntelGKLUtils.<clinit>(IntelGKLUtils.java:42)
	at com.intel.gkl.pairhmm.PairHmmUnitTest.<clinit>(PairHmmUnitTest.java:20)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:23)
	at org.testng.internal.InstanceCreator.instantiateUsingDefaultConstructor(InstanceCreator.java:193)
	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:113)
	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79)
	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:114)
	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:172)
	at org.testng.TestClass.getInstances(TestClass.java:102)
	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82)
	at org.testng.TestClass.init(TestClass.java:74)
	at org.testng.TestClass.<init>(TestClass.java:39)
	at org.testng.TestRunner.initMethods(TestRunner.java:463)
	at org.testng.TestRunner.init(TestRunner.java:342)
	at org.testng.TestRunner.init(TestRunner.java:295)
	at org.testng.TestRunner.<init>(TestRunner.java:181)
	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:618)
	at org.testng.SuiteRunner.init(SuiteRunner.java:196)
	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127)
	at org.testng.TestNG.createSuiteRunner(TestNG.java:1265)
	at org.testng.TestNG.createSuiteRunners(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1093)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:750)

Gradle suite > Gradle test > com.intel.gkl.compression.DeflaterIntegrationTest > integrationTest STANDARD_OUT
    16:58:22.122 INFO  NativeLibraryLoader - Loading libgkl_compression.so from file:/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/GKL/build/classes/java/main/com/intel/gkl/native/libgkl_compression.so
    16:58:22.247 INFO  DeflaterIntegrationTest - input filesize = 222075
    16:58:22.255 INFO  DeflaterIntegrationTest - deflater level, time (sec), filesize
    16:58:22.839 INFO  DeflaterIntegrationTest - PROFILE 0 0.178 717525
    16:58:22.944 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:23.172 INFO  DeflaterIntegrationTest - PROFILE 1 0.039 283133
    16:58:23.246 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:23.513 INFO  DeflaterIntegrationTest - PROFILE 2 0.011 283130
    16:58:23.552 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:23.738 INFO  DeflaterIntegrationTest - PROFILE 3 0.067 235201
    16:58:23.768 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:23.972 INFO  DeflaterIntegrationTest - PROFILE 4 0.095 226437
    16:58:23.997 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:24.236 INFO  DeflaterIntegrationTest - PROFILE 5 0.131 222078
    16:58:24.253 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:24.535 INFO  DeflaterIntegrationTest - PROFILE 6 0.125 219422
    16:58:24.560 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:24.836 INFO  DeflaterIntegrationTest - PROFILE 7 0.163 218378
    16:58:24.891 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:25.311 INFO  DeflaterIntegrationTest - PROFILE 8 0.277 217209
    16:58:25.350 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:25.682 INFO  DeflaterIntegrationTest - PROFILE 9 0.237 216970
    16:58:25.697 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:25.823 INFO  DeflaterIntegrationTest - PROFILE 0 0.032 717525
    16:58:25.849 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:26.024 INFO  DeflaterIntegrationTest - PROFILE 1 0.069 243537
    16:58:26.030 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:26.177 INFO  DeflaterIntegrationTest - PROFILE 2 0.040 239297
    16:58:26.223 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:26.364 INFO  DeflaterIntegrationTest - PROFILE 3 0.037 235201
    16:58:26.386 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:26.564 INFO  DeflaterIntegrationTest - PROFILE 4 0.094 226437
    16:58:26.580 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:26.741 INFO  DeflaterIntegrationTest - PROFILE 5 0.069 222078
    16:58:26.759 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:26.939 INFO  DeflaterIntegrationTest - PROFILE 6 0.100 219422
    16:58:26.975 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:27.192 INFO  DeflaterIntegrationTest - PROFILE 7 0.112 218378
    16:58:27.213 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:27.471 INFO  DeflaterIntegrationTest - PROFILE 8 0.150 217209
    16:58:27.497 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677
    16:58:27.791 INFO  DeflaterIntegrationTest - PROFILE 9 0.193 216970
    16:58:27.814 INFO  DeflaterIntegrationTest - Checking generated output. Total records = 1677

Gradle suite > Gradle test > com.intel.gkl.compression.DeflaterIntegrationTest > integrationTest PASSED

Gradle suite > Gradle test > com.intel.gkl.compression.DeflaterProfile > profileTest STANDARD_OUT
    16:58:27.867 INFO  DeflaterIntegrationTest - Level 1
    16:58:27.951 INFO  DeflaterIntegrationTest - Level 1

Gradle suite > Gradle test > com.intel.gkl.compression.DeflaterProfile > profileTest PASSED

Gradle suite > Gradle test > com.intel.gkl.compression.DeflaterUnitTest > loadLibrary PASSED

Gradle suite > Gradle test > com.intel.gkl.compression.DeflaterUnitTest > randomDNATest STANDARD_OUT
    4194304 bytes compressed to 4194629 bytes : -0.01% compression
    19
    4194304 bytes compressed to 1326172 bytes : 68.38% compression
    22
    4194304 bytes compressed to 1325974 bytes : 68.39% compression
    27
    4194304 bytes compressed to 1277711 bytes : 69.54% compression
    19
    4194304 bytes compressed to 1283171 bytes : 69.41% compression
    19
    4194304 bytes compressed to 1259384 bytes : 69.97% compression
    24
    4194304 bytes compressed to 1226813 bytes : 70.75% compression
    22
    4194304 bytes compressed to 1217018 bytes : 70.98% compression
    24
    4194304 bytes compressed to 1199550 bytes : 71.40% compression
    12
    4194304 bytes compressed to 1199433 bytes : 71.40% compression
    10

Gradle suite > Gradle test > com.intel.gkl.compression.DeflaterUnitTest > randomDNATest PASSED

Gradle suite > Gradle test > com.intel.gkl.compression.InflaterUnitTest > inflaterUnitTest STANDARD_OUT
    Level: 1, time: 0
    Level: 2, time: 0
    Level: 3, time: 0
    Level: 4, time: 1
    Level: 5, time: 0
    Level: 6, time: 0
    Level: 7, time: 0
    Level: 8, time: 0
    Level: 9, time: 0

Gradle suite > Gradle test > com.intel.gkl.compression.InflaterUnitTest > inflaterUnitTest PASSED

Gradle suite > Gradle test > com.intel.gkl.IntelGKLUtilsUnitTest > availableOmpThreadsTest STANDARD_OUT
    16:58:40.702 INFO  NativeLibraryLoader - Loading libgkl_utils.so from file:/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/GKL/build/classes/java/main/com/intel/gkl/native/libgkl_utils.so
    16:58:40.704 INFO  NativeLibraryLoader - Loading libgkl_pairhmm_omp.so from file:/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/GKL/build/classes/java/main/com/intel/gkl/native/libgkl_pairhmm_omp.so
    16:58:40.720 INFO  IntelGKLUtilsUnitTest - Test getting OpenMP threads when OMP available

Gradle suite > Gradle test > com.intel.gkl.IntelGKLUtilsUnitTest > availableOmpThreadsTest PASSED

Gradle suite > Gradle test > com.intel.gkl.IntelGKLUtilsUnitTest > platformFeaturesTest STANDARD_OUT
    16:58:40.723 INFO  IntelGKLUtilsUnitTest - Check Platform Features
    16:58:40.723 INFO  IntelGKLUtilsUnitTest - AVX is supported

Gradle suite > Gradle test > com.intel.gkl.IntelGKLUtilsUnitTest > platformFeaturesTest PASSED

Gradle suite > Gradle test > com.intel.gkl.pairhmm.PairHmmUnitTest > dataFileTest STANDARD_OUT
    16:58:40.727 INFO  NativeLibraryLoader - Loading libgkl_pairhmm.so from file:/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/GKL/build/classes/java/main/com/intel/gkl/native/libgkl_pairhmm.so
    16:58:40.730 WARN  IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM
    16:58:40.816 WARN  IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM

Gradle suite > Gradle test > com.intel.gkl.pairhmm.PairHmmUnitTest > dataFileTest PASSED

Gradle suite > Gradle test > com.intel.gkl.pairhmm.PairHmmUnitTest > fpgaTest STANDARD_OUT
    16:58:40.958 INFO  NativeLibraryLoader - Loading libgkl_pairhmm_shacc.so from file:/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/GKL/build/classes/java/main/com/intel/gkl/native/libgkl_pairhmm_shacc.so
    16:58:40.968 INFO  NativeLibraryLoader - Loading libgkl_pairhmm_fpga.so from file:/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/GKL/build/classes/java/main/com/intel/gkl/native/libgkl_pairhmm_fpga.so

Gradle suite > Gradle test > com.intel.gkl.pairhmm.PairHmmUnitTest > fpgaTest PASSED

Gradle suite > Gradle test > com.intel.gkl.pairhmm.PairHmmUnitTest > omp_Test STANDARD_OUT
    16:58:41.001 WARN  IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM
    16:58:41.002 INFO  IntelPairHmm - Available threads: 1
    16:58:41.008 INFO  IntelPairHmm - Requested threads: 10
    16:58:41.008 WARN  IntelPairHmm - Using 1 available threads, but 10 were requested

Gradle suite > Gradle test > com.intel.gkl.pairhmm.PairHmmUnitTest > omp_Test PASSED

Gradle suite > Gradle test > com.intel.gkl.pairhmm.PairHmmUnitTest > simpleTest STANDARD_OUT
    16:58:41.009 WARN  IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM

Gradle suite > Gradle test > com.intel.gkl.pairhmm.PairHmmUnitTest > simpleTest PASSED

Gradle suite > Gradle test > com.intel.gkl.smithwaterman.SmithWatermanUnitTest > simpleTest STANDARD_OUT
    16:58:41.018 WARN  SmithWatermanUnitTest - Could not load IntelSmithWaterman; skipping test...

Gradle suite > Gradle test > com.intel.gkl.smithwaterman.SmithWatermanUnitTest > simpleTest SKIPPED
Results: SUCCESS (12 tests, 11 successes, 0 failures, 1 skipped)

BUILD SUCCESSFUL in 38s
8 actionable tasks: 2 executed, 6 up-to-date
cd benchmarks/phmm; make CC=gcc arch=avx2 VTUNE_HOME=
make[1]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/phmm'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/phmm'
cd tools/minimap2; make
make[1]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/minimap2'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/minimap2'
cd benchmarks/chain; make CXX=g++ arch=avx2 VTUNE_HOME=
make[1]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/chain'
Creating directories
make[2]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/chain'
Making symlink: chain -> build/bin/chain
make[2]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/chain'
make[1]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/chain'
cd tools/spoa; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=Release ..; make
mkdir: cannot create directory ‘build’: File exists
-- Configuring done
-- Generating done
-- Build files have been written to: /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/build
make[1]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/build'
make[2]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/build'
make[3]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/build'
Scanning dependencies of target spoa
make[3]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/build'
make[3]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/build'
[ 20%] Building CXX object CMakeFiles/spoa.dir/src/graph.cpp.o
In file included from /usr/local/include/palisade/core/math/binaryuniformgenerator.h:31,
                 from /usr/local/include/palisade/core/math/distrgen.h:32,
                 from /usr/local/include/palisade/core/palisadecore.h:33,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/math/distributiongenerator.h:67: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
   67 | #pragma omp parallel for num_threads(threads)
      | 
/usr/local/include/palisade/core/math/distributiongenerator.h:76: warning: ignoring #pragma omp critical [-Wunknown-pragmas]
   76 | #pragma omp critical
      | 
/usr/local/include/palisade/core/math/distributiongenerator.h:175: warning: ignoring #pragma omp threadprivate [-Wunknown-pragmas]
  175 | #pragma omp threadprivate(m_prng)
      | 
In file included from /usr/local/include/palisade/pke/palisade.h:64,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/math/matrix.h:340: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
  340 | #pragma omp parallel for
      | 
/usr/local/include/palisade/core/math/matrix.h:446: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
  446 | #pragma omp parallel for
      | 
/usr/local/include/palisade/core/math/matrix.h:485: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
  485 | #pragma omp parallel for
      | 
In file included from /usr/local/include/palisade/core/math/backend.h:49,
                 from /usr/local/include/palisade/core/palisadecore.h:29,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/utils/parallel.h: In member function ‘void lbcrypto::ParallelControls::SetNumThreads(int)’:
/usr/local/include/palisade/core/utils/parallel.h:100:26: warning: unused parameter ‘nthreads’ [-Wunused-parameter]
  100 |   void SetNumThreads(int nthreads) {
      |                      ~~~~^~~~~~~~
In file included from /usr/local/include/palisade/core/math/bigintfxd/mubintvecfxd.h:34,
                 from /usr/local/include/palisade/core/math/backend.h:162,
                 from /usr/local/include/palisade/core/palisadecore.h:29,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/math/bigintfxd/ubintfxd.h: At global scope:
/usr/local/include/palisade/core/math/bigintfxd/ubintfxd.h:60:27: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
   60 | using U128BITS = unsigned __int128;
      |                           ^~~~~~~~
In file included from /usr/local/include/palisade/core/math/bigintdyn/ubintdyn.h:42,
                 from /usr/local/include/palisade/core/math/backend.h:185,
                 from /usr/local/include/palisade/core/palisadecore.h:29,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/math/nbtheory.h:48:39: warning: ISO C++ does not support ‘__int128’ for ‘u’ [-Wpedantic]
   48 | inline int clz_u128(unsigned __int128 u) {
      |                                       ^
/usr/local/include/palisade/core/math/nbtheory.h:57:2: warning: extra ‘;’ [-Wpedantic]
   57 | };  // namespace
      |  ^
/usr/local/include/palisade/core/math/nbtheory.h:201:39: warning: ISO C++ does not support ‘__int128’ for ‘x’ [-Wpedantic]
  201 | inline usint GetMSB(unsigned __int128 x) {
      |                                       ^
In file included from /usr/local/include/palisade/core/math/backend.h:185,
                 from /usr/local/include/palisade/core/palisadecore.h:29,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/math/bigintdyn/ubintdyn.h:347:27: warning: ISO C++ does not support ‘__int128’ for ‘val’ [-Wpedantic]
  347 |   ubint(unsigned __int128 val);
      |                           ^~~
In file included from /usr/local/include/palisade/core/palisadecore.h:29,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/math/backend.h:226:27: warning: ISO C++ does not support ‘__int128’ for ‘DoubleNativeInt’ [-Wpedantic]
  226 | typedef unsigned __int128 DoubleNativeInt;
      |                           ^~~~~~~~~~~~~~~
/usr/local/include/palisade/core/math/backend.h:227:27: warning: ISO C++ does not support ‘__int128’ for ‘uint128_t’ [-Wpedantic]
  227 | typedef unsigned __int128 uint128_t;
      |                           ^~~~~~~~~
/usr/local/include/palisade/core/math/backend.h:228:18: warning: ISO C++ does not support ‘__int128’ for ‘int128_t’ [-Wpedantic]
  228 | typedef __int128 int128_t;
      |                  ^~~~~~~~
In file included from /usr/local/include/palisade/core/math/backend.h:266,
                 from /usr/local/include/palisade/core/palisadecore.h:29,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/math/bigintnat/mubintvecnat.h:678:52: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
  678 |     std::vector<bigintnat::NativeIntegerT<unsigned __int128>, A> const
      |                                                    ^~~~~~~~
/usr/local/include/palisade/core/math/bigintnat/mubintvecnat.h: In function ‘void cereal::save(Archive&, const std::vector<bigintnat::NativeIntegerT<__int128 unsigned>, A>&)’:
/usr/local/include/palisade/core/math/bigintnat/mubintvecnat.h:682:31: warning: ISO C++ does not support ‘__int128’ for ‘mask’ [-Wpedantic]
  682 |   constexpr unsigned __int128 mask =
      |                               ^~~~
/usr/local/include/palisade/core/math/bigintnat/mubintvecnat.h:683:29: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
  683 |       (static_cast<unsigned __int128>(1) << 64) - 1;
      |                             ^~~~~~~~
/usr/local/include/palisade/core/math/bigintnat/mubintvecnat.h:686:23: warning: ISO C++ does not support ‘__int128’ for ‘int128’ [-Wpedantic]
  686 |     unsigned __int128 int128 = v.ConvertToInt();
      |                       ^~~~~~
/usr/local/include/palisade/core/math/bigintnat/mubintvecnat.h: At global scope:
/usr/local/include/palisade/core/math/bigintnat/mubintvecnat.h:713:52: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
  713 |     std::vector<bigintnat::NativeIntegerT<unsigned __int128>, A> &vector) {
      |                                                    ^~~~~~~~
In file included from /usr/local/include/palisade/core/math/backend.h:267,
                 from /usr/local/include/palisade/core/palisadecore.h:29,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/math/bigintnat/ubintnat.h:66:27: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
   66 | using U128BITS = unsigned __int128;
      |                           ^~~~~~~~
/usr/local/include/palisade/core/math/bigintnat/ubintnat.h:115:32: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
  115 | struct DoubleDataType<unsigned __int128> {
      |                                ^~~~~~~~
/usr/local/include/palisade/core/math/bigintnat/ubintnat.h:117:22: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
  117 |   using SignedType = __int128;
      |                      ^~~~~~~~
/usr/local/include/palisade/core/math/bigintnat/ubintnat.h:241:25: warning: ISO C++ does not support ‘__int128’ for ‘val’ [-Wpedantic]
  241 |       unsigned __int128 val,
      |                         ^~~
/usr/local/include/palisade/core/math/bigintnat/ubintnat.h:242:57: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
  242 |       typename std::enable_if<!std::is_same<T, unsigned __int128>::value,
      |                                                         ^~~~~~~~
/usr/local/include/palisade/core/math/bigintnat/ubintnat.h:247:27: warning: ISO C++ does not support ‘__int128’ for ‘val’ [-Wpedantic]
  247 |   NativeIntegerT(__int128 val,
      |                           ^~~
/usr/local/include/palisade/core/math/bigintnat/ubintnat.h:248:59: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
  248 |                  typename std::enable_if<!std::is_same<T, __int128>::value,
      |                                                           ^~~~~~~~
/usr/local/include/palisade/core/math/bigintnat/ubintnat.h:2323:56: warning: ISO C++ does not support ‘__int128’ for ‘value’ [-Wpedantic]
 2323 |   static inline std::string toString(unsigned __int128 value) {
      |                                                        ^~~~~
In file included from /usr/local/include/palisade/core/math/distrgen.h:34,
                 from /usr/local/include/palisade/core/palisadecore.h:33,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/math/discretegaussiangeneratorgeneric.h: In constructor ‘lbcrypto::SamplerCombiner::SamplerCombiner(lbcrypto::BaseSampler*, lbcrypto::BaseSampler*, int64_t, int64_t)’:
/usr/local/include/palisade/core/math/discretegaussiangeneratorgeneric.h:274:49: warning: unused parameter ‘s2’ [-Wunused-parameter]
  274 |   SamplerCombiner(BaseSampler* s1, BaseSampler* s2, int64_t z1, int64_t z2)
      |                                    ~~~~~~~~~~~~~^~
In file included from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:35,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/encoding/plaintext.h: In member function ‘virtual void lbcrypto::PlaintextImpl::SetLength(size_t)’:
/usr/local/include/palisade/core/encoding/plaintext.h:281:33: warning: unused parameter ‘newSize’ [-Wunused-parameter]
  281 |   virtual void SetLength(size_t newSize) {
      |                          ~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/encoding/ckkspackedencoding.h: At global scope:
/usr/local/include/palisade/core/encoding/ckkspackedencoding.h:282:21: warning: enclosing class of ‘constexpr’ non-static member function ‘int64_t lbcrypto::CKKSPackedEncoding::Max64BitValue() const’ is not a literal type [-Wpedantic]
  282 |   constexpr int64_t Max64BitValue() const {
      |                     ^~~~~~~~~~~~~
/usr/local/include/palisade/core/encoding/ckkspackedencoding.h:53:7: note: ‘lbcrypto::CKKSPackedEncoding’ is not literal because:
   53 | class CKKSPackedEncoding : public PlaintextImpl {
      |       ^~~~~~~~~~~~~~~~~~
/usr/local/include/palisade/core/encoding/ckkspackedencoding.h:53:7: note:   ‘lbcrypto::CKKSPackedEncoding’ has a non-trivial destructor
In file included from /usr/local/include/palisade/pke/palisade.h:61,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/metadata.h: In copy constructor ‘lbcrypto::Metadata::Metadata(const lbcrypto::Metadata&)’:
/usr/local/include/palisade/pke/metadata.h:32:28: warning: unused parameter ‘mdata’ [-Wunused-parameter]
   32 |   Metadata(const Metadata& mdata) { Metadata(); }
      |            ~~~~~~~~~~~~~~~~^~~~~
/usr/local/include/palisade/pke/metadata.h: In member function ‘virtual bool lbcrypto::Metadata::operator==(const lbcrypto::Metadata&) const’:
/usr/local/include/palisade/pke/metadata.h:52:43: warning: unused parameter ‘mdata’ [-Wunused-parameter]
   52 |   virtual bool operator==(const Metadata& mdata) const { return true; }
      |                           ~~~~~~~~~~~~~~~~^~~~~
In file included from /usr/local/include/palisade/core/utils/serial.h:55,
                 from /usr/local/include/palisade/pke/cryptocontext.h:39,
                 from /usr/local/include/palisade/pke/palisade.h:69,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/cereal/archives/json.hpp: At global scope:
/usr/local/include/palisade/cereal/archives/json.hpp:255:31: warning: ISO C++ does not support ‘__int128’ for ‘i128’ [-Wpedantic]
  255 |       void saveValue(__int128 i128) {
      |                               ^~~~
/usr/local/include/palisade/cereal/archives/json.hpp:261:40: warning: ISO C++ does not support ‘__int128’ for ‘u128’ [-Wpedantic]
  261 |       void saveValue(unsigned __int128 u128) {
      |                                        ^~~~
In file included from /usr/local/include/palisade/core/utils/serial.h:55,
                 from /usr/local/include/palisade/pke/cryptocontext.h:39,
                 from /usr/local/include/palisade/pke/palisade.h:69,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/cereal/archives/json.hpp:326:60: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
  326 |                                           !std::is_same<T, __int128>::value,
      |                                                            ^~~~~~~~
/usr/local/include/palisade/cereal/archives/json.hpp:327:69: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
  327 |                                           !std::is_same<T, unsigned __int128>::value,
      |                                                                     ^~~~~~~~
/usr/local/include/palisade/cereal/archives/json.hpp:729:60: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
  729 |                                           !std::is_same<T, __int128>::value,
      |                                                            ^~~~~~~~
/usr/local/include/palisade/cereal/archives/json.hpp:730:69: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
  730 |                                           !std::is_same<T, unsigned __int128>::value,
      |                                                                     ^~~~~~~~
/usr/local/include/palisade/cereal/archives/json.hpp:741:57: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
  741 |       template<class T, traits::EnableIf<std::is_same<T,__int128>::value || std::is_same<T,unsigned __int128>::value> = traits::sfinae>
      |                                                         ^~~~~~~~
/usr/local/include/palisade/cereal/archives/json.hpp:741:101: warning: ISO C++ does not support ‘__int128’ for ‘type name’ [-Wpedantic]
  741 |       template<class T, traits::EnableIf<std::is_same<T,__int128>::value || std::is_same<T,unsigned __int128>::value> = traits::sfinae>
      |                                                                                                     ^~~~~~~~
In file included from /usr/local/include/palisade/pke/ciphertext-ser.h:30,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:11,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/metadata-ser.h:21:62: warning: extra ‘;’ [-Wpedantic]
   21 |                      lbcrypto::Metadata::SerializedVersion());
      |                                                              ^
/usr/local/include/palisade/pke/metadata-ser.h:22:41: warning: extra ‘;’ [-Wpedantic]
   22 | CEREAL_REGISTER_TYPE(lbcrypto::Metadata);
      |                                         ^
/usr/local/include/palisade/pke/metadata-ser.h:24:45: warning: extra ‘;’ [-Wpedantic]
   24 | CEREAL_REGISTER_TYPE(lbcrypto::MetadataTest);
      |                                             ^
In file included from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:11,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/ciphertext-ser.h:38:67: warning: extra ‘;’ [-Wpedantic]
   38 |     lbcrypto::CiphertextImpl<lbcrypto::Poly>::SerializedVersion());
      |                                                                   ^
/usr/local/include/palisade/pke/ciphertext-ser.h:41:73: warning: extra ‘;’ [-Wpedantic]
   41 |     lbcrypto::CiphertextImpl<lbcrypto::NativePoly>::SerializedVersion());
      |                                                                         ^
/usr/local/include/palisade/pke/ciphertext-ser.h:44:71: warning: extra ‘;’ [-Wpedantic]
   44 |     lbcrypto::CiphertextImpl<lbcrypto::DCRTPoly>::SerializedVersion());
      |                                                                       ^
In file included from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:12,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/cryptocontext-ser.h:40:70: warning: extra ‘;’ [-Wpedantic]
   40 |     lbcrypto::CryptoContextImpl<lbcrypto::Poly>::SerializedVersion());
      |                                                                      ^
/usr/local/include/palisade/pke/cryptocontext-ser.h:43:76: warning: extra ‘;’ [-Wpedantic]
   43 |     lbcrypto::CryptoContextImpl<lbcrypto::NativePoly>::SerializedVersion());
      |                                                                            ^
/usr/local/include/palisade/pke/cryptocontext-ser.h:46:74: warning: extra ‘;’ [-Wpedantic]
   46 |     lbcrypto::CryptoContextImpl<lbcrypto::DCRTPoly>::SerializedVersion());
      |                                                                          ^
In file included from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:13,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/pubkeylp-ser.h:53:67: warning: extra ‘;’ [-Wpedantic]
   53 | CEREAL_REGISTER_TYPE(lbcrypto::LPCryptoParameters<lbcrypto::Poly>);
      |                                                                   ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:54:73: warning: extra ‘;’ [-Wpedantic]
   54 | CEREAL_REGISTER_TYPE(lbcrypto::LPCryptoParameters<lbcrypto::NativePoly>);
      |                                                                         ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:71: warning: extra ‘;’ [-Wpedantic]
   56 | CEREAL_REGISTER_TYPE(lbcrypto::LPCryptoParametersRLWE<lbcrypto::Poly>);
      |                                                                       ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:77: warning: extra ‘;’ [-Wpedantic]
   57 | CEREAL_REGISTER_TYPE(lbcrypto::LPCryptoParametersRLWE<lbcrypto::NativePoly>);
      |                                                                             ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:59:76: warning: extra ‘;’ [-Wpedantic]
   59 | CEREAL_REGISTER_TYPE(lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::Poly>);
      |                                                                            ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:61:65: warning: extra ‘;’ [-Wpedantic]
   61 |     lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::NativePoly>);
      |                                                                 ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:62: warning: extra ‘;’ [-Wpedantic]
   63 | CEREAL_REGISTER_TYPE(lbcrypto::LPEvalKeyImpl<lbcrypto::Poly>);
      |                                                              ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:68: warning: extra ‘;’ [-Wpedantic]
   64 | CEREAL_REGISTER_TYPE(lbcrypto::LPEvalKeyImpl<lbcrypto::NativePoly>);
      |                                                                    ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:66:67: warning: extra ‘;’ [-Wpedantic]
   66 | CEREAL_REGISTER_TYPE(lbcrypto::LPEvalKeyRelinImpl<lbcrypto::Poly>);
      |                                                                   ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:67:73: warning: extra ‘;’ [-Wpedantic]
   67 | CEREAL_REGISTER_TYPE(lbcrypto::LPEvalKeyRelinImpl<lbcrypto::NativePoly>);
      |                                                                         ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:71:50: warning: extra ‘;’ [-Wpedantic]
   71 |     lbcrypto::LPEvalKeyRelinImpl<lbcrypto::Poly>);
      |                                                  ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:74:56: warning: extra ‘;’ [-Wpedantic]
   74 |     lbcrypto::LPEvalKeyRelinImpl<lbcrypto::NativePoly>);
      |                                                        ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:76:71: warning: extra ‘;’ [-Wpedantic]
   76 | CEREAL_REGISTER_TYPE(lbcrypto::LPCryptoParameters<lbcrypto::DCRTPoly>);
      |                                                                       ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:77:75: warning: extra ‘;’ [-Wpedantic]
   77 | CEREAL_REGISTER_TYPE(lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPoly>);
      |                                                                           ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:78:80: warning: extra ‘;’ [-Wpedantic]
   78 | CEREAL_REGISTER_TYPE(lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::DCRTPoly>);
      |                                                                                ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:66: warning: extra ‘;’ [-Wpedantic]
   79 | CEREAL_REGISTER_TYPE(lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPoly>);
      |                                                                  ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:80:71: warning: extra ‘;’ [-Wpedantic]
   80 | CEREAL_REGISTER_TYPE(lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPoly>);
      |                                                                       ^
/usr/local/include/palisade/pke/pubkeylp-ser.h:83:54: warning: extra ‘;’ [-Wpedantic]
   83 |     lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPoly>);
      |                                                      ^
In file included from /usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:29,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:14,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:58:70: warning: extra ‘;’ [-Wpedantic]
   58 | CEREAL_REGISTER_TYPE(lbcrypto::LPCryptoParametersBFV<lbcrypto::Poly>);
      |                                                                      ^
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:59:76: warning: extra ‘;’ [-Wpedantic]
   59 | CEREAL_REGISTER_TYPE(lbcrypto::LPCryptoParametersBFV<lbcrypto::NativePoly>);
      |                                                                            ^
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:60:74: warning: extra ‘;’ [-Wpedantic]
   60 | CEREAL_REGISTER_TYPE(lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPoly>);
      |                                                                          ^
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:62:79: warning: extra ‘;’ [-Wpedantic]
   62 | CEREAL_REGISTER_TYPE(lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::Poly>);
      |                                                                               ^
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:64:68: warning: extra ‘;’ [-Wpedantic]
   64 |     lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::NativePoly>);
      |                                                                    ^
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:66:66: warning: extra ‘;’ [-Wpedantic]
   66 |     lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPoly>);
      |                                                                  ^
In file included from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:14,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:41:77: warning: extra ‘;’ [-Wpedantic]
   41 | CEREAL_REGISTER_TYPE(lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPoly>);
      |                                                                             ^
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:43:69: warning: extra ‘;’ [-Wpedantic]
   43 |     lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPoly>);
      |                                                                     ^
/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp: In member function ‘void spoa::Graph::print_codes_size_and_codes()’:
/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:166:18: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  166 |     for(int i=0;i<coder_.size();i++){
      |                 ~^~~~~~~~~~~~~~
/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp: In member function ‘void spoa::Graph::add_alignment(const Alignment&, const char*, vecCT, uint32_t, const std::vector<unsigned int>&)’:
/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:200:18: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  200 |     for(int j=0;j<coder_.size();j++){
      |                 ~^~~~~~~~~~~~~~
/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:220:18: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  220 |     for(int j=0;j<coder_.size();j++){
      |                 ~^~~~~~~~~~~~~~
/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:264:14: warning: unused variable ‘letter’ [-Wunused-variable]
  264 |         char letter = sequence[alignment[i].second];
      |              ^~~~~~
/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp: In member function ‘int32_t spoa::Graph::add_sequence(const char*, vecCT, const std::vector<unsigned int>&, uint32_t, uint32_t)’:
/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:329:46: warning: unused parameter ‘sequence’ [-Wunused-parameter]
  329 | std::int32_t Graph::add_sequence(const char* sequence, vecCT enc_sequence,
      |                                  ~~~~~~~~~~~~^~~~~~~~
In file included from /usr/local/include/palisade/pke/cryptocontext.h:39,
                 from /usr/local/include/palisade/pke/palisade.h:69,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext-ser.h:72:20:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalMultKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:134:58:   required from here
/usr/local/include/palisade/core/utils/serial.h:132:78: warning: unused parameter ‘ser’ [-Wunused-parameter]
  132 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERJSON& ser) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:460:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalMultKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:138:47:   required from here
/usr/local/include/palisade/core/utils/serial.h:144:74: warning: unused parameter ‘ser’ [-Wunused-parameter]
  144 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERJSON& ser) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:521:22:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalSumKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:140:58:   required from here
/usr/local/include/palisade/core/utils/serial.h:132:78: warning: unused parameter ‘ser’ [-Wunused-parameter]
  132 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERJSON& ser) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:564:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalSumKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:144:47:   required from here
/usr/local/include/palisade/core/utils/serial.h:144:74: warning: unused parameter ‘ser’ [-Wunused-parameter]
  144 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERJSON& ser) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext-ser.h:72:20:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalMultKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:157:76:   required from here
/usr/local/include/palisade/core/utils/serial.h:132:78: warning: unused parameter ‘ser’ [-Wunused-parameter]
  132 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERJSON& ser) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:460:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalMultKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:162:65:   required from here
/usr/local/include/palisade/core/utils/serial.h:144:74: warning: unused parameter ‘ser’ [-Wunused-parameter]
  144 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERJSON& ser) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:521:22:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalSumKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:164:76:   required from here
/usr/local/include/palisade/core/utils/serial.h:132:78: warning: unused parameter ‘ser’ [-Wunused-parameter]
  132 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERJSON& ser) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:564:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalSumKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:169:65:   required from here
/usr/local/include/palisade/core/utils/serial.h:144:74: warning: unused parameter ‘ser’ [-Wunused-parameter]
  144 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERJSON& ser) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext-ser.h:72:20:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalMultKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:182:76:   required from here
/usr/local/include/palisade/core/utils/serial.h:132:78: warning: unused parameter ‘ser’ [-Wunused-parameter]
  132 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERJSON& ser) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:460:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalMultKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:187:65:   required from here
/usr/local/include/palisade/core/utils/serial.h:144:74: warning: unused parameter ‘ser’ [-Wunused-parameter]
  144 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERJSON& ser) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:521:22:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalSumKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:189:76:   required from here
/usr/local/include/palisade/core/utils/serial.h:132:78: warning: unused parameter ‘ser’ [-Wunused-parameter]
  132 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERJSON& ser) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:564:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalSumKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:194:65:   required from here
/usr/local/include/palisade/core/utils/serial.h:144:74: warning: unused parameter ‘ser’ [-Wunused-parameter]
  144 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERJSON& ser) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext-ser.h:72:20:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalMultKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:259:60:   required from here
/usr/local/include/palisade/core/utils/serial.h:85:80: warning: unused parameter ‘st’ [-Wunused-parameter]
   85 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERBINARY& st) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:460:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalMultKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:263:69:   required from here
/usr/local/include/palisade/core/utils/serial.h:97:76: warning: unused parameter ‘st’ [-Wunused-parameter]
   97 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERBINARY& st) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:521:22:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalSumKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:265:60:   required from here
/usr/local/include/palisade/core/utils/serial.h:85:80: warning: unused parameter ‘st’ [-Wunused-parameter]
   85 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERBINARY& st) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:564:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalSumKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:269:69:   required from here
/usr/local/include/palisade/core/utils/serial.h:97:76: warning: unused parameter ‘st’ [-Wunused-parameter]
   97 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERBINARY& st) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext-ser.h:72:20:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalMultKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:284:60:   required from here
/usr/local/include/palisade/core/utils/serial.h:85:80: warning: unused parameter ‘st’ [-Wunused-parameter]
   85 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERBINARY& st) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:460:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalMultKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:289:69:   required from here
/usr/local/include/palisade/core/utils/serial.h:97:76: warning: unused parameter ‘st’ [-Wunused-parameter]
   97 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERBINARY& st) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:521:22:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalSumKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:292:60:   required from here
/usr/local/include/palisade/core/utils/serial.h:85:80: warning: unused parameter ‘st’ [-Wunused-parameter]
   85 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERBINARY& st) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:564:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalSumKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:297:69:   required from here
/usr/local/include/palisade/core/utils/serial.h:97:76: warning: unused parameter ‘st’ [-Wunused-parameter]
   97 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERBINARY& st) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext-ser.h:72:20:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalMultKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:312:60:   required from here
/usr/local/include/palisade/core/utils/serial.h:85:80: warning: unused parameter ‘st’ [-Wunused-parameter]
   85 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERBINARY& st) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:460:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalMultKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:317:69:   required from here
/usr/local/include/palisade/core/utils/serial.h:97:76: warning: unused parameter ‘st’ [-Wunused-parameter]
   97 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERBINARY& st) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:521:22:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalSumKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:320:60:   required from here
/usr/local/include/palisade/core/utils/serial.h:85:80: warning: unused parameter ‘st’ [-Wunused-parameter]
   85 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERBINARY& st) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:564:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalSumKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:325:69:   required from here
/usr/local/include/palisade/core/utils/serial.h:97:76: warning: unused parameter ‘st’ [-Wunused-parameter]
   97 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERBINARY& st) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/include/palisade/pke/palisade.h:61,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/metadata.h: In instantiation of ‘void lbcrypto::Metadata::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::Metadata; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::Metadata; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::Metadata&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::Metadata&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::Metadata&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::Metadata]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::Metadata>’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::Metadata; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/metadata-ser.h:22:1:   required from here
/usr/local/include/palisade/pke/metadata.h:84:22: warning: unused parameter ‘ar’ [-Wunused-parameter]
   84 |   void save(Archive& ar, std::uint32_t const version) const {}
      |             ~~~~~~~~~^~
/usr/local/include/palisade/pke/metadata.h:84:46: warning: unused parameter ‘version’ [-Wunused-parameter]
   84 |   void save(Archive& ar, std::uint32_t const version) const {}
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/metadata.h: In instantiation of ‘void lbcrypto::Metadata::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::Metadata; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::Metadata; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::Metadata&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::Metadata&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::Metadata&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::Metadata]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::Metadata>’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::Metadata; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/metadata-ser.h:22:1:   required from here
/usr/local/include/palisade/pke/metadata.h:90:22: warning: unused parameter ‘ar’ [-Wunused-parameter]
   90 |   void load(Archive& ar, std::uint32_t const version) {
      |             ~~~~~~~~~^~
/usr/local/include/palisade/pke/metadata.h: In instantiation of ‘void lbcrypto::Metadata::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::Metadata; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::Metadata; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::Metadata&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::Metadata&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::Metadata&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::Metadata]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::Metadata>’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::Metadata; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/metadata-ser.h:22:1:   required from here
/usr/local/include/palisade/pke/metadata.h:90:22: warning: unused parameter ‘ar’ [-Wunused-parameter]
/usr/local/include/palisade/pke/metadata.h: In instantiation of ‘void lbcrypto::Metadata::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::Metadata; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::Metadata; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::Metadata&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::Metadata&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::Metadata&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::Metadata]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::Metadata>’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::Metadata; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/metadata-ser.h:22:1:   required from here
/usr/local/include/palisade/pke/metadata.h:84:22: warning: unused parameter ‘ar’ [-Wunused-parameter]
   84 |   void save(Archive& ar, std::uint32_t const version) const {}
      |             ~~~~~~~~~^~
/usr/local/include/palisade/pke/metadata.h:84:46: warning: unused parameter ‘version’ [-Wunused-parameter]
   84 |   void save(Archive& ar, std::uint32_t const version) const {}
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/metadata.h: In instantiation of ‘void lbcrypto::MetadataTest::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::MetadataTest; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::MetadataTest; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::MetadataTest&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::MetadataTest&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::MetadataTest&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::MetadataTest]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::MetadataTest>’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::MetadataTest; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::MetadataTest; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::MetadataTest; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/metadata-ser.h:24:1:   required from here
/usr/local/include/palisade/pke/metadata.h:184:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  184 |   void save(Archive& ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/metadata.h: In instantiation of ‘void lbcrypto::MetadataTest::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::MetadataTest; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::MetadataTest; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::MetadataTest&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::MetadataTest&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::MetadataTest&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::MetadataTest]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::MetadataTest>’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::MetadataTest; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::MetadataTest; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::MetadataTest; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/metadata-ser.h:24:1:   required from here
/usr/local/include/palisade/pke/metadata.h:184:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/pke/scheme/allscheme.h:27,
                 from /usr/local/include/palisade/pke/cryptocontext.h:34,
                 from /usr/local/include/palisade/pke/palisade.h:69,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:311:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  311 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:324:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  324 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:324:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:311:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  311 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:311:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:324:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  324 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:324:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:311:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  311 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/pke/palisade.h:66,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:512:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  512 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:517:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  517 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:517:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:512:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  512 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:512:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:517:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  517 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:517:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:512:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  512 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyRelinImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:66:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:737:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  737 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyRelinImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:66:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:737:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyRelinImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:67:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:737:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyRelinImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:67:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:737:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/pke/scheme/allscheme.h:27,
                 from /usr/local/include/palisade/pke/cryptocontext.h:34,
                 from /usr/local/include/palisade/pke/palisade.h:69,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:77:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:311:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  311 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:77:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:324:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  324 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:77:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:324:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:77:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:311:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  311 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/pke/palisade.h:66,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:512:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  512 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:517:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  517 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:517:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:512:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  512 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyRelinImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:80:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:737:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  737 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyRelinImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:80:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:737:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/pke/scheme/allscheme.h:31,
                 from /usr/local/include/palisade/pke/cryptocontext.h:34,
                 from /usr/local/include/palisade/pke/palisade.h:69,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:58:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:322:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  322 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:58:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:322:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:59:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:322:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:59:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:322:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:60:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:322:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:60:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:322:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:62:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1047:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1047 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:62:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1052:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1052 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:62:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1052:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:62:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1047:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1047 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1047:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1052:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1052 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1052:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1047:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1047 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:65:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1047:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:65:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1052:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1052 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:65:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1052:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:65:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1047:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1047 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/pke/scheme/allscheme.h:32,
                 from /usr/local/include/palisade/pke/cryptocontext.h:34,
                 from /usr/local/include/palisade/pke/palisade.h:69,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFVrns<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:41:1:   required from here
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h:419:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  419 |   void save(Archive& ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFVrns<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:41:1:   required from here
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h:419:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:42:1:   required from here
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h:885:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  885 |   void save(Archive& ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:42:1:   required from here
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h:890:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  890 |   void load(Archive& ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:42:1:   required from here
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h:890:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:42:1:   required from here
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h:885:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  885 |   void save(Archive& ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/pke/palisade.h:66,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPCryptoParameters<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/scheme/rlwe.h:312:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:3124:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 3124 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPCryptoParameters<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/scheme/rlwe.h:312:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:3124:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPCryptoParameters<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/scheme/rlwe.h:312:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:3124:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPCryptoParameters<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPCryptoParameters<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/scheme/rlwe.h:312:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:3124:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPKey<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/pubkeylp.h:513:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:138:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  138 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPKey<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:802:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(cereal::base_class<T>&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/pubkeylp.h:518:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:143:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  143 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPKey<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:802:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(cereal::base_class<T>&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/pubkeylp.h:518:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:143:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPKey<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/pubkeylp.h:513:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:138:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  138 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPKey<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/pubkeylp.h:513:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:138:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPKey<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:802:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(cereal::base_class<T>&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/pubkeylp.h:518:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:143:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  143 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPKey<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:802:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(cereal::base_class<T>&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/pubkeylp.h:518:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:143:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPKey<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPKey<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/pubkeylp.h:513:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:138:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  138 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPCryptoParameters<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParameters<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParameters<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPCryptoParameters<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPCryptoParameters<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPCryptoParameters<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/scheme/rlwe.h:312:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:77:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:3124:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 3124 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPCryptoParameters<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParameters<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParameters<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPCryptoParameters<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPCryptoParameters<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPCryptoParameters<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/scheme/rlwe.h:312:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:77:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:3124:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPKey<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/pubkeylp.h:513:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:138:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  138 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPKey<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:802:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(cereal::base_class<T>&) [with T = lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/pubkeylp.h:518:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:143:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  143 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPKey<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:802:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(cereal::base_class<T>&) [with T = lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/pubkeylp.h:518:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:143:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPKey<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPKey<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/pubkeylp.h:513:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:138:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  138 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionScheme<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1048:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:62:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:4570:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 4570 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionScheme<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1048:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:62:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:4570:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionScheme<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1048:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:4570:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionScheme<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1048:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:4570:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionScheme<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1048:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:65:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:4570:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionScheme<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::LPPublicKeyEncryptionScheme<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1048:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:65:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:4570:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/core/math/bigintfxd/mubintvecfxd.h:34,
                 from /usr/local/include/palisade/core/math/backend.h:162,
                 from /usr/local/include/palisade/core/palisadecore.h:29,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/math/bigintfxd/ubintfxd.h: In instantiation of ‘typename std::enable_if<cereal::traits::is_text_archive<Archive>::value, void>::type bigintfxd::BigInteger<uint_type, BITLENGTH>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; uint_type = unsigned int; unsigned int BITLENGTH = 3500; typename std::enable_if<cereal::traits::is_text_archive<Archive>::value, void>::type = void; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = bigintfxd::BigInteger<unsigned int, 3500>; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = bigintfxd::BigInteger<unsigned int, 3500>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const bigintfxd::BigInteger<unsigned int, 3500>&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const bigintfxd::BigInteger<unsigned int, 3500>&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const bigintfxd::BigInteger<unsigned int, 3500>&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 24 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:58:1:   required from here
/usr/local/include/palisade/core/math/bigintfxd/ubintfxd.h:1028:41: warning: unused parameter ‘version’ [-Wunused-parameter]
 1028 |   save(Archive &ar, std::uint32_t const version) const {
      |                     ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/core/math/bigintfxd/ubintfxd.h: In instantiation of ‘typename std::enable_if<(! cereal::traits::is_text_archive<Archive>::value), void>::type bigintfxd::BigInteger<uint_type, BITLENGTH>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; uint_type = unsigned int; unsigned int BITLENGTH = 3500; typename std::enable_if<(! cereal::traits::is_text_archive<Archive>::value), void>::type = void; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = bigintfxd::BigInteger<unsigned int, 3500>; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = bigintfxd::BigInteger<unsigned int, 3500>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const bigintfxd::BigInteger<unsigned int, 3500>&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const bigintfxd::BigInteger<unsigned int, 3500>&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const bigintfxd::BigInteger<unsigned int, 3500>&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 24 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:58:1:   required from here
/usr/local/include/palisade/core/math/bigintfxd/ubintfxd.h:1020:41: warning: unused parameter ‘version’ [-Wunused-parameter]
 1020 |   save(Archive &ar, std::uint32_t const version) const {
      |                     ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/core/math/backend.h:267,
                 from /usr/local/include/palisade/core/palisadecore.h:29,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/math/bigintnat/ubintnat.h: In instantiation of ‘typename std::enable_if<(std::is_same<NativeInt, long unsigned int>::value || std::is_same<NativeInt, unsigned int>::value), T>::type bigintnat::NativeIntegerT<I>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; T = void; NativeInt = long unsigned int; typename std::enable_if<(std::is_same<NativeInt, long unsigned int>::value || std::is_same<NativeInt, unsigned int>::value), T>::type = void; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = bigintnat::NativeIntegerT<long unsigned int>; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = bigintnat::NativeIntegerT<long unsigned int>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const bigintnat::NativeIntegerT<long unsigned int>&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const bigintnat::NativeIntegerT<long unsigned int>&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const bigintnat::NativeIntegerT<long unsigned int>&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 24 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:59:1:   required from here
/usr/local/include/palisade/core/math/bigintnat/ubintnat.h:2070:41: warning: unused parameter ‘version’ [-Wunused-parameter]
 2070 |   save(Archive &ar, std::uint32_t const version) const {
      |                     ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/core/math/bigintnat/ubintnat.h: In instantiation of ‘typename std::enable_if<(std::is_same<NativeInt, long unsigned int>::value || std::is_same<NativeInt, unsigned int>::value), T>::type bigintnat::NativeIntegerT<I>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; T = void; NativeInt = long unsigned int; typename std::enable_if<(std::is_same<NativeInt, long unsigned int>::value || std::is_same<NativeInt, unsigned int>::value), T>::type = void; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = bigintnat::NativeIntegerT<long unsigned int>; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = bigintnat::NativeIntegerT<long unsigned int>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const bigintnat::NativeIntegerT<long unsigned int>&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const bigintnat::NativeIntegerT<long unsigned int>&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const bigintnat::NativeIntegerT<long unsigned int>&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 24 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:59:1:   required from here
/usr/local/include/palisade/core/math/bigintnat/ubintnat.h:2070:41: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/pke/palisade.h:69,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoObject<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/pubkeylp.h:139:7:   [ skipping 27 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:2641:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 2641 |   void save(Archive& ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoObject<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/pubkeylp.h:139:7:   [ skipping 27 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:2641:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoObject<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/pubkeylp.h:139:7:   [ skipping 27 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:2641:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoObject<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::CryptoObject<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/pubkeylp.h:139:7:   [ skipping 27 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:2641:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoObject<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::CryptoObject<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::CryptoObject<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::CryptoObject<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::CryptoObject<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::CryptoObject<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/pke/pubkeylp.h:139:7:   [ skipping 27 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:2641:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoObject<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::CryptoObject<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::CryptoObject<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::CryptoObject<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::CryptoObject<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::CryptoObject<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/pke/pubkeylp.h:139:7:   [ skipping 27 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:2641:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/core/lattice/backend.h:33,
                 from /usr/local/include/palisade/core/encoding/plaintext.h:34,
                 from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:35,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/lattice/poly.h: In instantiation of ‘void lbcrypto::PolyImpl<VecType>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; VecType = bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/types/vector.hpp:69:9:   required from ‘typename std::enable_if<(((! cereal::traits::is_output_serializable<cereal::BinaryData<T>, Archive>::value) || (! std::is_arithmetic<T>::value)) && (! std::is_same<T, bool>::value)), void>::type cereal::save(Archive&, const std::vector<T, A>&) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; A = std::allocator<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename std::enable_if<(((! cereal::traits::is_output_serializable<cereal::BinaryData<T>, Archive>::value) || (! std::is_arithmetic<T>::value)) && (! std::is_same<T, bool>::value)), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 32 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:66:1:   required from here
/usr/local/include/palisade/core/lattice/poly.h:897:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  897 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/core/lattice/poly.h: In instantiation of ‘void lbcrypto::PolyImpl<VecType>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; VecType = bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/types/vector.hpp:69:9:   required from ‘typename std::enable_if<(((! cereal::traits::is_output_serializable<cereal::BinaryData<T>, Archive>::value) || (! std::is_arithmetic<T>::value)) && (! std::is_same<T, bool>::value)), void>::type cereal::save(Archive&, const std::vector<T, A>&) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; A = std::allocator<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename std::enable_if<(((! cereal::traits::is_output_serializable<cereal::BinaryData<T>, Archive>::value) || (! std::is_arithmetic<T>::value)) && (! std::is_same<T, bool>::value)), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 32 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:66:1:   required from here
/usr/local/include/palisade/core/lattice/poly.h:897:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/core/lattice/poly.h: In instantiation of ‘void lbcrypto::PolyImpl<VecType>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; VecType = bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/types/vector.hpp:69:9:   required from ‘typename std::enable_if<(((! cereal::traits::is_output_serializable<cereal::BinaryData<T>, Archive>::value) || (! std::is_arithmetic<T>::value)) && (! std::is_same<T, bool>::value)), void>::type cereal::save(Archive&, const std::vector<T, A>&) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; A = std::allocator<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename std::enable_if<(((! cereal::traits::is_output_serializable<cereal::BinaryData<T>, Archive>::value) || (! std::is_arithmetic<T>::value)) && (! std::is_same<T, bool>::value)), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 32 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:67:1:   required from here
/usr/local/include/palisade/core/lattice/poly.h:897:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/core/lattice/poly.h: In instantiation of ‘void lbcrypto::PolyImpl<VecType>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; VecType = bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/types/vector.hpp:69:9:   required from ‘typename std::enable_if<(((! cereal::traits::is_output_serializable<cereal::BinaryData<T>, Archive>::value) || (! std::is_arithmetic<T>::value)) && (! std::is_same<T, bool>::value)), void>::type cereal::save(Archive&, const std::vector<T, A>&) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; A = std::allocator<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename std::enable_if<(((! cereal::traits::is_output_serializable<cereal::BinaryData<T>, Archive>::value) || (! std::is_arithmetic<T>::value)) && (! std::is_same<T, bool>::value)), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 32 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:67:1:   required from here
/usr/local/include/palisade/core/lattice/poly.h:897:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/core/lattice/backend.h:66,
                 from /usr/local/include/palisade/core/encoding/plaintext.h:34,
                 from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:35,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/lattice/dcrtpoly.h: In instantiation of ‘void lbcrypto::DCRTPolyImpl<VecType>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; VecType = bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/types/vector.hpp:69:9:   required from ‘typename std::enable_if<(((! cereal::traits::is_output_serializable<cereal::BinaryData<T>, Archive>::value) || (! std::is_arithmetic<T>::value)) && (! std::is_same<T, bool>::value)), void>::type cereal::save(Archive&, const std::vector<T, A>&) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; A = std::allocator<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename std::enable_if<(((! cereal::traits::is_output_serializable<cereal::BinaryData<T>, Archive>::value) || (! std::is_arithmetic<T>::value)) && (! std::is_same<T, bool>::value)), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 32 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:80:1:   required from here
/usr/local/include/palisade/core/lattice/dcrtpoly.h:1626:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1626 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/core/lattice/dcrtpoly.h: In instantiation of ‘void lbcrypto::DCRTPolyImpl<VecType>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; VecType = bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/types/vector.hpp:69:9:   required from ‘typename std::enable_if<(((! cereal::traits::is_output_serializable<cereal::BinaryData<T>, Archive>::value) || (! std::is_arithmetic<T>::value)) && (! std::is_same<T, bool>::value)), void>::type cereal::save(Archive&, const std::vector<T, A>&) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; A = std::allocator<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename std::enable_if<(((! cereal::traits::is_output_serializable<cereal::BinaryData<T>, Archive>::value) || (! std::is_arithmetic<T>::value)) && (! std::is_same<T, bool>::value)), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 32 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:80:1:   required from here
/usr/local/include/palisade/core/lattice/dcrtpoly.h:1626:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/core/lattice/ildcrtparams.h:33,
                 from /usr/local/include/palisade/core/lattice/backend.h:29,
                 from /usr/local/include/palisade/core/encoding/plaintext.h:34,
                 from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:35,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/lattice/ilparams.h: In instantiation of ‘void lbcrypto::ILParamsImpl<IntType>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; IntType = bigintfxd::BigInteger<unsigned int, 3500>; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::ILParamsImpl<bigintfxd::BigInteger<unsigned int, 3500> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::ILParamsImpl<bigintfxd::BigInteger<unsigned int, 3500> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::ILParamsImpl<bigintfxd::BigInteger<unsigned int, 3500> >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::ILParamsImpl<bigintfxd::BigInteger<unsigned int, 3500> >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = lbcrypto::ILParamsImpl<bigintfxd::BigInteger<unsigned int, 3500> >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 46 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/core/lattice/ilparams.h:136:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  136 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:34,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/encoding/encodingparams.h: In instantiation of ‘void lbcrypto::EncodingParamsImpl::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::EncodingParamsImpl; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::EncodingParamsImpl; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::EncodingParamsImpl&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::EncodingParamsImpl&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = lbcrypto::EncodingParamsImpl&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 46 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/core/encoding/encodingparams.h:269:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  269 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/core/lattice/ildcrtparams.h:33,
                 from /usr/local/include/palisade/core/lattice/backend.h:29,
                 from /usr/local/include/palisade/core/encoding/plaintext.h:34,
                 from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:35,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/lattice/ilparams.h: In instantiation of ‘void lbcrypto::ILParamsImpl<IntType>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; IntType = bigintfxd::BigInteger<unsigned int, 3500>; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::ILParamsImpl<bigintfxd::BigInteger<unsigned int, 3500> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::ILParamsImpl<bigintfxd::BigInteger<unsigned int, 3500> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::ILParamsImpl<bigintfxd::BigInteger<unsigned int, 3500> >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::ILParamsImpl<bigintfxd::BigInteger<unsigned int, 3500> >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::ILParamsImpl<bigintfxd::BigInteger<unsigned int, 3500> >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 46 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/core/lattice/ilparams.h:136:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  136 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:34,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/encoding/encodingparams.h: In instantiation of ‘void lbcrypto::EncodingParamsImpl::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::EncodingParamsImpl; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::EncodingParamsImpl; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::EncodingParamsImpl&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::EncodingParamsImpl&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::EncodingParamsImpl&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 46 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/core/encoding/encodingparams.h:269:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  269 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/core/lattice/ildcrtparams.h:33,
                 from /usr/local/include/palisade/core/lattice/backend.h:29,
                 from /usr/local/include/palisade/core/encoding/plaintext.h:34,
                 from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:35,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/lattice/ilparams.h: In instantiation of ‘void lbcrypto::ILParamsImpl<IntType>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; IntType = bigintnat::NativeIntegerT<long unsigned int>; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::ILParamsImpl<bigintnat::NativeIntegerT<long unsigned int> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::ILParamsImpl<bigintnat::NativeIntegerT<long unsigned int> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::ILParamsImpl<bigintnat::NativeIntegerT<long unsigned int> >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::ILParamsImpl<bigintnat::NativeIntegerT<long unsigned int> >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = lbcrypto::ILParamsImpl<bigintnat::NativeIntegerT<long unsigned int> >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 46 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/core/lattice/ilparams.h:136:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  136 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/core/lattice/ilparams.h: In instantiation of ‘void lbcrypto::ILParamsImpl<IntType>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; IntType = bigintnat::NativeIntegerT<long unsigned int>; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::ILParamsImpl<bigintnat::NativeIntegerT<long unsigned int> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::ILParamsImpl<bigintnat::NativeIntegerT<long unsigned int> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::ILParamsImpl<bigintnat::NativeIntegerT<long unsigned int> >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::ILParamsImpl<bigintnat::NativeIntegerT<long unsigned int> >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::ILParamsImpl<bigintnat::NativeIntegerT<long unsigned int> >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 46 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/core/lattice/ilparams.h:136:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/core/lattice/backend.h:29,
                 from /usr/local/include/palisade/core/encoding/plaintext.h:34,
                 from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:35,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/lattice/ildcrtparams.h: In instantiation of ‘void lbcrypto::ILDCRTParams<IntType>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; IntType = bigintfxd::BigInteger<unsigned int, 3500>; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 46 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:77:1:   required from here
/usr/local/include/palisade/core/lattice/ildcrtparams.h:348:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  348 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/core/lattice/ildcrtparams.h: In instantiation of ‘void lbcrypto::ILDCRTParams<IntType>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; IntType = bigintfxd::BigInteger<unsigned int, 3500>; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 46 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:77:1:   required from here
/usr/local/include/palisade/core/lattice/ildcrtparams.h:348:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/core/lattice/backend.h:28,
                 from /usr/local/include/palisade/core/encoding/plaintext.h:34,
                 from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:35,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/lattice/elemparams.h: In instantiation of ‘void lbcrypto::ElemParams<IntegerType>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; IntegerType = bigintfxd::BigInteger<unsigned int, 3500>; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::ElemParams<bigintfxd::BigInteger<unsigned int, 3500> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::ElemParams<bigintfxd::BigInteger<unsigned int, 3500> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::ElemParams<bigintfxd::BigInteger<unsigned int, 3500> >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::ElemParams<bigintfxd::BigInteger<unsigned int, 3500> > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::ElemParams<bigintfxd::BigInteger<unsigned int, 3500> > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/core/lattice/ilparams.h:137:7:   [ skipping 52 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/core/lattice/elemparams.h:202:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  202 |   void save(Archive& ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/core/lattice/elemparams.h: In instantiation of ‘void lbcrypto::ElemParams<IntegerType>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; IntegerType = bigintfxd::BigInteger<unsigned int, 3500>; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::ElemParams<bigintfxd::BigInteger<unsigned int, 3500> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::ElemParams<bigintfxd::BigInteger<unsigned int, 3500> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::ElemParams<bigintfxd::BigInteger<unsigned int, 3500> >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::ElemParams<bigintfxd::BigInteger<unsigned int, 3500> > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::ElemParams<bigintfxd::BigInteger<unsigned int, 3500> > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/core/lattice/ilparams.h:137:7:   [ skipping 52 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/core/lattice/elemparams.h:202:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/core/lattice/elemparams.h: In instantiation of ‘void lbcrypto::ElemParams<IntegerType>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; IntegerType = bigintnat::NativeIntegerT<long unsigned int>; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::ElemParams<bigintnat::NativeIntegerT<long unsigned int> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::ElemParams<bigintnat::NativeIntegerT<long unsigned int> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::ElemParams<bigintnat::NativeIntegerT<long unsigned int> >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::ElemParams<bigintnat::NativeIntegerT<long unsigned int> > >; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::ElemParams<bigintnat::NativeIntegerT<long unsigned int> > >}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/core/lattice/ilparams.h:137:7:   [ skipping 52 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/core/lattice/elemparams.h:202:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/core/lattice/elemparams.h: In instantiation of ‘void lbcrypto::ElemParams<IntegerType>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; IntegerType = bigintnat::NativeIntegerT<long unsigned int>; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::ElemParams<bigintnat::NativeIntegerT<long unsigned int> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::ElemParams<bigintnat::NativeIntegerT<long unsigned int> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:403:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const cereal::base_class<T>&) [with T = lbcrypto::ElemParams<bigintnat::NativeIntegerT<long unsigned int> >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::base_class<lbcrypto::ElemParams<bigintnat::NativeIntegerT<long unsigned int> > >; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::base_class<lbcrypto::ElemParams<bigintnat::NativeIntegerT<long unsigned int> > >}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/core/lattice/ilparams.h:137:7:   [ skipping 52 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/core/lattice/elemparams.h:202:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/pke/palisade.h:69,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoContextImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 52 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:2551:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 2551 |   void save(Archive& ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoContextImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 52 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:2551:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoContextImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 52 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:2551:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoContextImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::CryptoContextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 52 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:2551:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoContextImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::CryptoContextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::CryptoContextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 52 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:2551:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoContextImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::CryptoContextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::CryptoContextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::CryptoContextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::CryptoContextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 52 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:2551:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/core/math/backend.h:162,
                 from /usr/local/include/palisade/core/palisadecore.h:29,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/math/bigintfxd/mubintvecfxd.h: In instantiation of ‘typename std::enable_if<cereal::traits::is_text_archive<Archive>::value, void>::type bigintfxd::BigVectorImpl<IntegerType>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; IntegerType = bigintfxd::BigInteger<unsigned int, 3500>; typename std::enable_if<cereal::traits::is_text_archive<Archive>::value, void>::type = void; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 57 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:66:1:   required from here
/usr/local/include/palisade/core/math/bigintfxd/mubintvecfxd.h:529:41: warning: unused parameter ‘version’ [-Wunused-parameter]
  529 |   save(Archive &ar, std::uint32_t const version) const {
      |                     ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/core/math/bigintfxd/mubintvecfxd.h: In instantiation of ‘typename std::enable_if<(! cereal::traits::is_text_archive<Archive>::value), void>::type bigintfxd::BigVectorImpl<IntegerType>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; IntegerType = bigintfxd::BigInteger<unsigned int, 3500>; typename std::enable_if<(! cereal::traits::is_text_archive<Archive>::value), void>::type = void; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 57 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:66:1:   required from here
/usr/local/include/palisade/core/math/bigintfxd/mubintvecfxd.h:520:41: warning: unused parameter ‘version’ [-Wunused-parameter]
  520 |   save(Archive &ar, std::uint32_t const version) const {
      |                     ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/core/math/backend.h:266,
                 from /usr/local/include/palisade/core/palisadecore.h:29,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/math/bigintnat/mubintvecnat.h: In instantiation of ‘typename std::enable_if<cereal::traits::is_text_archive<Archive>::value, void>::type bigintnat::NativeVector<IntegerType>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; IntegerType = bigintnat::NativeIntegerT<long unsigned int>; typename std::enable_if<cereal::traits::is_text_archive<Archive>::value, void>::type = void; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 57 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:67:1:   required from here
/usr/local/include/palisade/core/math/bigintnat/mubintvecnat.h:591:41: warning: unused parameter ‘version’ [-Wunused-parameter]
  591 |   save(Archive &ar, std::uint32_t const version) const {
      |                     ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/core/math/bigintnat/mubintvecnat.h: In instantiation of ‘typename std::enable_if<(! cereal::traits::is_text_archive<Archive>::value), void>::type bigintnat::NativeVector<IntegerType>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; IntegerType = bigintnat::NativeIntegerT<long unsigned int>; typename std::enable_if<(! cereal::traits::is_text_archive<Archive>::value), void>::type = void; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 57 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:67:1:   required from here
/usr/local/include/palisade/core/math/bigintnat/mubintvecnat.h:579:41: warning: unused parameter ‘version’ [-Wunused-parameter]
  579 |   save(Archive &ar, std::uint32_t const version) const {
      |                     ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/pke/palisade.h:69,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘lbcrypto::Plaintext lbcrypto::CryptoContextImpl<Element>::MakeCKKSPackedPlaintext(const std::vector<std::complex<double> >&, size_t, uint32_t, std::shared_ptr<typename Element::Params>) const [with Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; lbcrypto::Plaintext = std::shared_ptr<lbcrypto::PlaintextImpl>; size_t = long unsigned int; uint32_t = unsigned int; typename Element::Params = lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >]’:
/usr/local/include/palisade/pke/cryptocontext.h:1364:21:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:1377:41: warning: implicitly-declared ‘lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >::ILDCRTParams(const lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >&)’ is deprecated [-Wdeprecated-copy]
 1377 |         ILDCRTParams<DCRTPoly::Integer> elemParams =
      |                                         ^~~~~~~~~~
In file included from /usr/local/include/palisade/core/lattice/backend.h:29,
                 from /usr/local/include/palisade/core/encoding/plaintext.h:34,
                 from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:35,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/lattice/ildcrtparams.h:209:23: note: because ‘lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >’ has user-provided ‘const lbcrypto::ILDCRTParams<IntType>& lbcrypto::ILDCRTParams<IntType>::operator=(const lbcrypto::ILDCRTParams<IntType>&) [with IntType = bigintfxd::BigInteger<unsigned int, 3500>]’
  209 |   const ILDCRTParams &operator=(const ILDCRTParams &rhs) {
      |                       ^~~~~~~~
In file included from /usr/local/include/palisade/pke/palisade.h:69,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘lbcrypto::Plaintext lbcrypto::CryptoContextImpl<Element>::MakeCKKSPackedPlaintext(const std::vector<std::complex<double> >&, size_t, uint32_t, std::shared_ptr<typename Element::Params>) const [with Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; lbcrypto::Plaintext = std::shared_ptr<lbcrypto::PlaintextImpl>; size_t = long unsigned int; uint32_t = unsigned int; typename Element::Params = lbcrypto::ILParamsImpl<bigintnat::NativeIntegerT<long unsigned int> >]’:
/usr/local/include/palisade/pke/cryptocontext.h:1364:21:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:1377:41: warning: implicitly-declared ‘lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >::ILDCRTParams(const lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >&)’ is deprecated [-Wdeprecated-copy]
 1377 |         ILDCRTParams<DCRTPoly::Integer> elemParams =
      |                                         ^~~~~~~~~~
In file included from /usr/local/include/palisade/core/lattice/backend.h:29,
                 from /usr/local/include/palisade/core/encoding/plaintext.h:34,
                 from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:35,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/lattice/ildcrtparams.h:209:23: note: because ‘lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >’ has user-provided ‘const lbcrypto::ILDCRTParams<IntType>& lbcrypto::ILDCRTParams<IntType>::operator=(const lbcrypto::ILDCRTParams<IntType>&) [with IntType = bigintfxd::BigInteger<unsigned int, 3500>]’
  209 |   const ILDCRTParams &operator=(const ILDCRTParams &rhs) {
      |                       ^~~~~~~~
In file included from /usr/local/include/palisade/pke/palisade.h:69,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘lbcrypto::Plaintext lbcrypto::CryptoContextImpl<Element>::MakeCKKSPackedPlaintext(const std::vector<std::complex<double> >&, size_t, uint32_t, std::shared_ptr<typename Element::Params>) const [with Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; lbcrypto::Plaintext = std::shared_ptr<lbcrypto::PlaintextImpl>; size_t = long unsigned int; uint32_t = unsigned int; typename Element::Params = lbcrypto::ILParamsImpl<bigintfxd::BigInteger<unsigned int, 3500> >]’:
/usr/local/include/palisade/pke/cryptocontext.h:1364:21:   required from here
/usr/local/include/palisade/pke/cryptocontext.h:1377:41: warning: implicitly-declared ‘lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >::ILDCRTParams(const lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >&)’ is deprecated [-Wdeprecated-copy]
 1377 |         ILDCRTParams<DCRTPoly::Integer> elemParams =
      |                                         ^~~~~~~~~~
In file included from /usr/local/include/palisade/core/lattice/backend.h:29,
                 from /usr/local/include/palisade/core/encoding/plaintext.h:34,
                 from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:35,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/core/lattice/ildcrtparams.h:209:23: note: because ‘lbcrypto::ILDCRTParams<bigintfxd::BigInteger<unsigned int, 3500> >’ has user-provided ‘const lbcrypto::ILDCRTParams<IntType>& lbcrypto::ILDCRTParams<IntType>::operator=(const lbcrypto::ILDCRTParams<IntType>&) [with IntType = bigintfxd::BigInteger<unsigned int, 3500>]’
  209 |   const ILDCRTParams &operator=(const ILDCRTParams &rhs) {
      |                       ^~~~~~~~
In file included from /usr/local/include/palisade/pke/palisade.h:66,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/../../benchmarks/poa/palisade_header.h:6,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/include/spoa/graph.hpp:17,
                 from /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/src/graph.cpp:14:
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘lbcrypto::Ciphertext<Element> lbcrypto::LPLeveledSHEAlgorithm<Element>::EvalPoly(lbcrypto::ConstCiphertext<Element>, const std::vector<double>&) const [with Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; lbcrypto::Ciphertext<Element> = std::shared_ptr<lbcrypto::CiphertextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; lbcrypto::ConstCiphertext<Element> = const std::shared_ptr<const lbcrypto::CiphertextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >]’:
/usr/local/include/palisade/pke/pubkeylp.h:4402:12:   required from ‘lbcrypto::Ciphertext<Element> lbcrypto::LPPublicKeyEncryptionScheme<Element>::EvalPoly(lbcrypto::ConstCiphertext<Element>, const std::vector<double>&) const [with Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; lbcrypto::Ciphertext<Element> = std::shared_ptr<lbcrypto::CiphertextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; lbcrypto::ConstCiphertext<Element> = const std::shared_ptr<const lbcrypto::CiphertextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >]’
/usr/local/include/palisade/pke/cryptocontext.h:2368:10:   required from ‘lbcrypto::Ciphertext<Element> lbcrypto::CryptoContextImpl<Element>::EvalPoly(lbcrypto::ConstCiphertext<Element>, const std::vector<double>&) const [with Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; lbcrypto::Ciphertext<Element> = std::shared_ptr<lbcrypto::CiphertextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; lbcrypto::ConstCiphertext<Element> = const std::shared_ptr<const lbcrypto::CiphertextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >]’
/usr/local/include/palisade/pke/cryptocontext.h:2359:31:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:1220:32: warning: unused parameter ‘cipherText’ [-Wunused-parameter]
 1220 |       ConstCiphertext<Element> cipherText,
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h:1221:34: warning: unused parameter ‘coefficients’ [-Wunused-parameter]
 1221 |       const std::vector<double> &coefficients) const {
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘lbcrypto::Ciphertext<Element> lbcrypto::LPLeveledSHEAlgorithm<Element>::EvalPoly(lbcrypto::ConstCiphertext<Element>, const std::vector<double>&) const [with Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; lbcrypto::Ciphertext<Element> = std::shared_ptr<lbcrypto::CiphertextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >; lbcrypto::ConstCiphertext<Element> = const std::shared_ptr<const lbcrypto::CiphertextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >]’:
/usr/local/include/palisade/pke/pubkeylp.h:4402:12:   required from ‘lbcrypto::Ciphertext<Element> lbcrypto::LPPublicKeyEncryptionScheme<Element>::EvalPoly(lbcrypto::ConstCiphertext<Element>, const std::vector<double>&) const [with Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; lbcrypto::Ciphertext<Element> = std::shared_ptr<lbcrypto::CiphertextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >; lbcrypto::ConstCiphertext<Element> = const std::shared_ptr<const lbcrypto::CiphertextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >]’
/usr/local/include/palisade/pke/cryptocontext.h:2368:10:   required from ‘lbcrypto::Ciphertext<Element> lbcrypto::CryptoContextImpl<Element>::EvalPoly(lbcrypto::ConstCiphertext<Element>, const std::vector<double>&) const [with Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; lbcrypto::Ciphertext<Element> = std::shared_ptr<lbcrypto::CiphertextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >; lbcrypto::ConstCiphertext<Element> = const std::shared_ptr<const lbcrypto::CiphertextImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >]’
/usr/local/include/palisade/pke/cryptocontext.h:2359:31:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:1220:32: warning: unused parameter ‘cipherText’ [-Wunused-parameter]
 1220 |       ConstCiphertext<Element> cipherText,
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h:1221:34: warning: unused parameter ‘coefficients’ [-Wunused-parameter]
 1221 |       const std::vector<double> &coefficients) const {
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘lbcrypto::Ciphertext<Element> lbcrypto::LPLeveledSHEAlgorithm<Element>::EvalPoly(lbcrypto::ConstCiphertext<Element>, const std::vector<double>&) const [with Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; lbcrypto::Ciphertext<Element> = std::shared_ptr<lbcrypto::CiphertextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; lbcrypto::ConstCiphertext<Element> = const std::shared_ptr<const lbcrypto::CiphertextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >]’:
/usr/local/include/palisade/pke/pubkeylp.h:4402:12:   required from ‘lbcrypto::Ciphertext<Element> lbcrypto::LPPublicKeyEncryptionScheme<Element>::EvalPoly(lbcrypto::ConstCiphertext<Element>, const std::vector<double>&) const [with Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; lbcrypto::Ciphertext<Element> = std::shared_ptr<lbcrypto::CiphertextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; lbcrypto::ConstCiphertext<Element> = const std::shared_ptr<const lbcrypto::CiphertextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >]’
/usr/local/include/palisade/pke/cryptocontext.h:2368:10:   required from ‘lbcrypto::Ciphertext<Element> lbcrypto::CryptoContextImpl<Element>::EvalPoly(lbcrypto::ConstCiphertext<Element>, const std::vector<double>&) const [with Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; lbcrypto::Ciphertext<Element> = std::shared_ptr<lbcrypto::CiphertextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; lbcrypto::ConstCiphertext<Element> = const std::shared_ptr<const lbcrypto::CiphertextImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >]’
/usr/local/include/palisade/pke/cryptocontext.h:2359:31:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:1220:32: warning: unused parameter ‘cipherText’ [-Wunused-parameter]
 1220 |       ConstCiphertext<Element> cipherText,
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h:1221:34: warning: unused parameter ‘coefficients’ [-Wunused-parameter]
 1221 |       const std::vector<double> &coefficients) const {
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
[ 40%] Linking CXX static library lib/libspoa.a
make[3]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/build'
[100%] Built target spoa
make[2]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/build'
make[1]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/tools/spoa/build'
cd benchmarks/poa; make CXX=g++ arch=avx2 VTUNE_HOME=
make[1]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/poa'
g++ -I/usr/local/include/palisade -I/usr/local/include/palisade/cereal -I/usr/local/include/palisade/pke -I/usr/local/include/palisade/core -DPALISADE_VERSION=1.11.7 -fopenmp -O3 -fopenmp -mavx2 -g msa_spoa_omp.cpp -I../../tools/spoa/include -I. -L../../tools/spoa/build/lib/ -lspoa -ldl -fopenmp -o poa /home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/palisade_header.o /usr/local/lib/libPALISADEbinfhe.so.1.11.7 /usr/local/lib/libPALISADEpke.so.1.11.7 /usr/local/lib/libPALISADEcore.so.1.11.7
msa_spoa_omp.cpp: In function ‘int main(int, char**)’:
msa_spoa_omp.cpp:290:21: warning: format ‘%d’ expects a matching ‘int’ argument [-Wformat=]
  290 |         printf("i: %d\n");
      |                    ~^
      |                     |
      |                     int
msa_spoa_omp.cpp:321:68: warning: format ‘%d’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
  321 |     fprintf(stderr, "Number of batches: %lu, Size of batch struct %d\n", batches.size(), sizeof(Batch));
      |                                                                   ~^                     ~~~~~~~~~~~~~
      |                                                                    |                     |
      |                                                                    int                   long unsigned int
      |                                                                   %ld
make[1]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/poa'
cd benchmarks/pileup; make CC=gcc arch=avx2 VTUNE_HOME=
make[1]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/pileup'
gcc medaka_common.c medaka_counts.c medaka_bamiter.c ../../tools/htslib/libhts.a -g -Wall -pthread -fstack-protector-strong -D_FORTIFY_SOURCE=2 -fPIC -std=c99 -O3 -fopenmp -I../../tools/htslib -lz -lm -lbz2 -llzma -lpthread -lcurl -lcrypto -ldl -o pileup
medaka_counts.c: In function ‘main’:
medaka_counts.c:544:39: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘size_t’ {aka ‘long unsigned int’} [-Wformat=]
  544 |             fprintf(stderr, "Running %d batches with threads: %d\n", batches.n, numThreads);
      |                                      ~^                              ~~~~~~~~~
      |                                       |                                     |
      |                                       int                                   size_t {aka long unsigned int}
      |                                      %ld
make[1]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/pileup'
cd benchmarks/kmer-cnt; make CXX=g++ arch=avx2 VTUNE_HOME=
make[1]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/kmer-cnt'
g++ -O3 -fopenmp -I/usr/local/include/palisade -I/usr/local/include/palisade/cereal -I/usr/local/include/palisade/pke -I/usr/local/include/palisade/core -DPALISADE_VERSION=1.11.7 -fopenmp sequence_container.cpp sequence.cpp vertex_index.cpp kmer_cnt.cpp -Ilibcuckoo -lz -lm -lbz2 -llzma -ldl -fopenmp -o kmer-cnt /usr/local/lib/libPALISADEbinfhe.so.1.11.7 /usr/local/lib/libPALISADEpke.so.1.11.7 /usr/local/lib/libPALISADEcore.so.1.11.7
make[1]: Leaving directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/kmer-cnt'
