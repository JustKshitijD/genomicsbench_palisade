Creating directories
make[1]: Entering directory '/home/kshitij/Desktop/NTU/Homomorphic/genomicsbench_palisade/benchmarks/chain'
Compiling: src/host_kernel.cpp -> build/host_kernel.o
g++ -I/usr/local/include/palisade -I/usr/local/include/palisade/cereal -I/usr/local/include/palisade/pke -I/usr/local/include/palisade/core -DPALISADE_VERSION=1.11.7 -fopenmp   -std=c++11 -Wall -Wextra -g -O3 -fopenmp -msse4.1 -I../../tools/minimap2 -I. -L../../tools/minimap2 -lminimap2 -ldl -MP -MMD -c src/host_kernel.cpp -o build/host_kernel.o
In file included from /usr/local/include/palisade/core/math/backend.h:49,
                 from /usr/local/include/palisade/core/palisadecore.h:29,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from src/../../../palisade_header.h:6,
                 from src/host_data.h:6,
                 from src/host_kernel.h:4,
                 from src/host_kernel.cpp:6:
/usr/local/include/palisade/core/utils/parallel.h: In member function ‘void lbcrypto::ParallelControls::SetNumThreads(int)’:
/usr/local/include/palisade/core/utils/parallel.h:100:26: warning: unused parameter ‘nthreads’ [-Wunused-parameter]
  100 |   void SetNumThreads(int nthreads) {
      |                      ~~~~^~~~~~~~
In file included from /usr/local/include/palisade/core/math/distrgen.h:34,
                 from /usr/local/include/palisade/core/palisadecore.h:33,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from src/../../../palisade_header.h:6,
                 from src/host_data.h:6,
                 from src/host_kernel.h:4,
                 from src/host_kernel.cpp:6:
/usr/local/include/palisade/core/math/discretegaussiangeneratorgeneric.h: In constructor ‘lbcrypto::SamplerCombiner::SamplerCombiner(lbcrypto::BaseSampler*, lbcrypto::BaseSampler*, int64_t, int64_t)’:
/usr/local/include/palisade/core/math/discretegaussiangeneratorgeneric.h:274:49: warning: unused parameter ‘s2’ [-Wunused-parameter]
  274 |   SamplerCombiner(BaseSampler* s1, BaseSampler* s2, int64_t z1, int64_t z2)
      |                                    ~~~~~~~~~~~~~^~
In file included from /usr/local/include/palisade/core/encoding/ckkspackedencoding.h:35,
                 from /usr/local/include/palisade/core/encoding/encodings.h:27,
                 from /usr/local/include/palisade/core/palisadecore.h:35,
                 from /usr/local/include/palisade/pke/palisade.h:32,
                 from src/../../../palisade_header.h:6,
                 from src/host_data.h:6,
                 from src/host_kernel.h:4,
                 from src/host_kernel.cpp:6:
/usr/local/include/palisade/core/encoding/plaintext.h: In member function ‘virtual void lbcrypto::PlaintextImpl::SetLength(size_t)’:
/usr/local/include/palisade/core/encoding/plaintext.h:281:33: warning: unused parameter ‘newSize’ [-Wunused-parameter]
  281 |   virtual void SetLength(size_t newSize) {
      |                          ~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/pke/palisade.h:61,
                 from src/../../../palisade_header.h:6,
                 from src/host_data.h:6,
                 from src/host_kernel.h:4,
                 from src/host_kernel.cpp:6:
/usr/local/include/palisade/pke/metadata.h: In copy constructor ‘lbcrypto::Metadata::Metadata(const lbcrypto::Metadata&)’:
/usr/local/include/palisade/pke/metadata.h:32:28: warning: unused parameter ‘mdata’ [-Wunused-parameter]
   32 |   Metadata(const Metadata& mdata) { Metadata(); }
      |            ~~~~~~~~~~~~~~~~^~~~~
/usr/local/include/palisade/pke/metadata.h: In member function ‘virtual bool lbcrypto::Metadata::operator==(const lbcrypto::Metadata&) const’:
/usr/local/include/palisade/pke/metadata.h:52:43: warning: unused parameter ‘mdata’ [-Wunused-parameter]
   52 |   virtual bool operator==(const Metadata& mdata) const { return true; }
      |                           ~~~~~~~~~~~~~~~~^~~~~
src/host_kernel.cpp: In function ‘void chain_dp(call_t*, return_t*)’:
src/host_kernel.cpp:78:16: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 2 has type ‘int64_t’ {aka ‘long int’} [-Wformat=]
   78 |  printf("n: %lld\n",n);
      |             ~~~^    ~
      |                |    |
      |                |    int64_t {aka long int}
      |                long long int
      |             %ld
src/host_kernel.cpp:105:19: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘int64_t’ {aka ‘long int’} [-Wformat=]
  105 |    printf("\ni1: %d\n",i);
      |                  ~^    ~
      |                   |    |
      |                   int  int64_t {aka long int}
      |                  %ld
src/host_kernel.cpp:116:17: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  116 |    printf("qi: %d, ",decrypt_ciphertext_to_plaintext_vector(qi_ct)[0]);
      |                ~^
      |                 |
      |                 int
      |                %ld
src/host_kernel.cpp:136:24: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 2 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  136 |    printf("sidi_ct: %lld\n",decrypt_ciphertext_to_plaintext_vector(sidi_ct)[0]);
      |                     ~~~^
      |                        |
      |                        long long int
      |                     %ld
src/host_kernel.cpp:140:17: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘int64_t’ {aka ‘long int’} [-Wformat=]
  140 |    printf("st: %d\n",st);
      |                ~^    ~~
      |                 |    |
      |                 int  int64_t {aka long int}
      |                %ld
src/host_kernel.cpp:157:20: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  157 |     printf("sidi: %d, sidj: %d, dr: %d, dq: %d, max_dist_x: %d, max_dist_y: %d\n",decrypt_ciphertext_to_plaintext_vector(sidi_ct)[0],decrypt_ciphertext_to_plaintext_vector(sidj_ct)[0],decrypt_ciphertext_to_plaintext_vector(dr_ct)[0],decrypt_ciphertext_to_plaintext_vector(dq_ct)[0],max_dist_x,max_dist_y);
      |                   ~^
      |                    |
      |                    int
      |                   %ld
src/host_kernel.cpp:157:30: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  157 |     printf("sidi: %d, sidj: %d, dr: %d, dq: %d, max_dist_x: %d, max_dist_y: %d\n",decrypt_ciphertext_to_plaintext_vector(sidi_ct)[0],decrypt_ciphertext_to_plaintext_vector(sidj_ct)[0],decrypt_ciphertext_to_plaintext_vector(dr_ct)[0],decrypt_ciphertext_to_plaintext_vector(dq_ct)[0],max_dist_x,max_dist_y);
      |                             ~^
      |                              |
      |                              int
      |                             %ld
src/host_kernel.cpp:157:38: warning: format ‘%d’ expects argument of type ‘int’, but argument 4 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  157 |     printf("sidi: %d, sidj: %d, dr: %d, dq: %d, max_dist_x: %d, max_dist_y: %d\n",decrypt_ciphertext_to_plaintext_vector(sidi_ct)[0],decrypt_ciphertext_to_plaintext_vector(sidj_ct)[0],decrypt_ciphertext_to_plaintext_vector(dr_ct)[0],decrypt_ciphertext_to_plaintext_vector(dq_ct)[0],max_dist_x,max_dist_y);
      |                                     ~^
      |                                      |
      |                                      int
      |                                     %ld
src/host_kernel.cpp:157:46: warning: format ‘%d’ expects argument of type ‘int’, but argument 5 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  157 |     printf("sidi: %d, sidj: %d, dr: %d, dq: %d, max_dist_x: %d, max_dist_y: %d\n",decrypt_ciphertext_to_plaintext_vector(sidi_ct)[0],decrypt_ciphertext_to_plaintext_vector(sidj_ct)[0],decrypt_ciphertext_to_plaintext_vector(dr_ct)[0],decrypt_ciphertext_to_plaintext_vector(dq_ct)[0],max_dist_x,max_dist_y);
      |                                             ~^
      |                                              |
      |                                              int
      |                                             %ld
src/host_kernel.cpp:168:70: error: ‘dd’ was not declared in this scope
  168 |     printf("dd: %d, bw: %d\n",decrypt_ciphertext_to_plaintext_vector(dd)[0],bw);
      |                                                                      ^~
src/host_kernel.cpp:183:24: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 2 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  183 |     printf("sc_ct1: %lld\n",decrypt_ciphertext_to_plaintext_vector(sc_ct)[0]);
      |                     ~~~^
      |                        |
      |                        long long int
      |                     %ld
src/host_kernel.cpp:199:10: warning: unused variable ‘c_log’ [-Wunused-variable]
  199 |      int c_log, c_lin; CT c_log_ct, c_lin_ct;
      |          ^~~~~
src/host_kernel.cpp:199:17: warning: unused variable ‘c_lin’ [-Wunused-variable]
  199 |      int c_log, c_lin; CT c_log_ct, c_lin_ct;
      |                 ^~~~~
src/host_kernel.cpp:261:24: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 2 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  261 |     printf("sc_ct2: %lld\n",decrypt_ciphertext_to_plaintext_vector(sc_ct)[0]);
      |                     ~~~^
      |                        |
      |                        long long int
      |                     %ld
src/host_kernel.cpp:266:24: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 2 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  266 |     printf("sc_ct3: %lld\n",decrypt_ciphertext_to_plaintext_vector(sc_ct)[0]);
      |                     ~~~^
      |                        |
      |                        long long int
      |                     %ld
src/host_kernel.cpp:287:35: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘int64_t’ {aka ‘long int’} [-Wformat=]
  287 |      printf("Inside ret->parents[%d]: %d, p_index: %d\n",j,ret->parents[j],p_index);
      |                                  ~^                      ~
      |                                   |                      |
      |                                   int                    int64_t {aka long int}
      |                                  %ld
src/host_kernel.cpp:314:25: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘int64_t’ {aka ‘long int’} [-Wformat=]
  314 |    printf("ret->scores[%d]: %d, %lld\n",i,ret->scores[i],decrypt_ciphertext_to_plaintext_vector(ret->scores_ct[i/16384])[i%16384]);
      |                        ~^               ~
      |                         |               |
      |                         int             int64_t {aka long int}
      |                        %ld
src/host_kernel.cpp:314:36: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 4 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  314 |    printf("ret->scores[%d]: %d, %lld\n",i,ret->scores[i],decrypt_ciphertext_to_plaintext_vector(ret->scores_ct[i/16384])[i%16384]);
      |                                 ~~~^
      |                                    |
      |                                    long long int
      |                                 %ld
src/host_kernel.cpp:315:26: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘int64_t’ {aka ‘long int’} [-Wformat=]
  315 |    printf("ret->parents[%d]: %d, %lld\n",i,ret->parents[i],decrypt_ciphertext_to_plaintext_vector(ret->parents_ct[i/16384])[i%16384]);
      |                         ~^               ~
      |                          |               |
      |                          int             int64_t {aka long int}
      |                         %ld
src/host_kernel.cpp:315:37: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 4 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  315 |    printf("ret->parents[%d]: %d, %lld\n",i,ret->parents[i],decrypt_ciphertext_to_plaintext_vector(ret->parents_ct[i/16384])[i%16384]);
      |                                  ~~~^
      |                                     |
      |                                     long long int
      |                                  %ld
src/host_kernel.cpp:316:30: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘int64_t’ {aka ‘long int’} [-Wformat=]
  316 |    printf("ret->peak_scores[%d]: %d, %lld\n",i,ret->peak_scores[i],decrypt_ciphertext_to_plaintext_vector(ret->peak_scores_ct[i/16384])[i%16384]);
      |                             ~^               ~
      |                              |               |
      |                              int             int64_t {aka long int}
      |                             %ld
src/host_kernel.cpp:316:41: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 4 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  316 |    printf("ret->peak_scores[%d]: %d, %lld\n",i,ret->peak_scores[i],decrypt_ciphertext_to_plaintext_vector(ret->peak_scores_ct[i/16384])[i%16384]);
      |                                      ~~~^
      |                                         |
      |                                         long long int
      |                                      %ld
src/host_kernel.cpp:126:42: warning: unused variable ‘min_d’ [-Wunused-variable]
  126 |    int32_t max_f = q_span_2, n_skip = 0, min_d;
      |                                          ^~~~~
src/host_kernel.cpp:327:19: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘int64_t’ {aka ‘long int’} [-Wformat=]
  327 |    printf("\ni2: %d\n",i);
      |                  ~^    ~
      |                   |    |
      |                   int  int64_t {aka long int}
      |                  %ld
src/host_kernel.cpp:390:25: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘int64_t’ {aka ‘long int’} [-Wformat=]
  390 |    printf("ret->scores[%d]: %d, %lld\n",i,ret->scores[i],decrypt_ciphertext_to_plaintext_vector(ret->scores_ct[i/16384])[i%16384]);
      |                        ~^               ~
      |                         |               |
      |                         int             int64_t {aka long int}
      |                        %ld
src/host_kernel.cpp:390:36: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 4 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  390 |    printf("ret->scores[%d]: %d, %lld\n",i,ret->scores[i],decrypt_ciphertext_to_plaintext_vector(ret->scores_ct[i/16384])[i%16384]);
      |                                 ~~~^
      |                                    |
      |                                    long long int
      |                                 %ld
src/host_kernel.cpp:391:26: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘int64_t’ {aka ‘long int’} [-Wformat=]
  391 |    printf("ret->parents[%d]: %d, %lld\n",i,ret->parents[i],decrypt_ciphertext_to_plaintext_vector(ret->parents_ct[i/16384])[i%16384]);
      |                         ~^               ~
      |                          |               |
      |                          int             int64_t {aka long int}
      |                         %ld
src/host_kernel.cpp:391:37: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 4 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  391 |    printf("ret->parents[%d]: %d, %lld\n",i,ret->parents[i],decrypt_ciphertext_to_plaintext_vector(ret->parents_ct[i/16384])[i%16384]);
      |                                  ~~~^
      |                                     |
      |                                     long long int
      |                                  %ld
src/host_kernel.cpp:392:30: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘int64_t’ {aka ‘long int’} [-Wformat=]
  392 |    printf("ret->peak_scores[%d]: %d, %lld\n",i,ret->peak_scores[i],decrypt_ciphertext_to_plaintext_vector(ret->peak_scores_ct[i/16384])[i%16384]);
      |                             ~^               ~
      |                              |               |
      |                              int             int64_t {aka long int}
      |                             %ld
src/host_kernel.cpp:392:41: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 4 has type ‘__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type’ {aka ‘long int’} [-Wformat=]
  392 |    printf("ret->peak_scores[%d]: %d, %lld\n",i,ret->peak_scores[i],decrypt_ciphertext_to_plaintext_vector(ret->peak_scores_ct[i/16384])[i%16384]);
      |                                      ~~~^
      |                                         |
      |                                         long long int
      |                                      %ld
src/host_kernel.cpp:398:29: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘int64_t’ {aka ‘long int’} [-Wformat=]
  398 |   printf("Time taken by i: %d is %lld microseconds\n",i,duration.count());
      |                            ~^                         ~
      |                             |                         |
      |                             int                       int64_t {aka long int}
      |                            %ld
src/host_kernel.cpp:398:37: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘std::chrono::duration<long int, std::ratio<1, 1000000> >::rep’ {aka ‘long int’} [-Wformat=]
  398 |   printf("Time taken by i: %d is %lld microseconds\n",i,duration.count());
      |                                  ~~~^                   ~~~~~~~~~~~~~~~~
      |                                     |                                 |
      |                                     long long int                     std::chrono::duration<long int, std::ratio<1, 1000000> >::rep {aka long int}
      |                                  %ld
src/host_kernel.cpp: In function ‘void host_chain_kernel(std::vector<call_t>&, std::vector<return_t>&, int)’:
src/host_kernel.cpp:409:68: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘size_t’ {aka ‘long unsigned int’} [-Wformat=]
  409 |     printf("-----------------------------------------------batch: %d\n",batch);
      |                                                                   ~^    ~~~~~
      |                                                                    |    |
      |                                                                    int  size_t {aka long unsigned int}
      |                                                                   %ld
src/host_kernel.cpp:419:43: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘std::chrono::duration<long int, std::ratio<1, 1000000> >::rep’ {aka ‘long int’} [-Wformat=]
  419 |     printf("Time taken by batch %d is: %lld microseconds\n",(int)(batch),duration.count());
      |                                        ~~~^                              ~~~~~~~~~~~~~~~~
      |                                           |                                            |
      |                                           long long int                                std::chrono::duration<long int, std::ratio<1, 1000000> >::rep {aka long int}
      |                                        %ld
In file included from /usr/local/include/palisade/pke/cryptocontext.h:39,
                 from /usr/local/include/palisade/pke/palisade.h:69,
                 from src/../../../palisade_header.h:6,
                 from src/host_data.h:6,
                 from src/host_kernel.h:4,
                 from src/host_kernel.cpp:6:
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext-ser.h:72:20:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalMultKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:134:58:   required from here
/usr/local/include/palisade/core/utils/serial.h:132:78: warning: unused parameter ‘ser’ [-Wunused-parameter]
  132 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERJSON& ser) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:460:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalMultKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:138:47:   required from here
/usr/local/include/palisade/core/utils/serial.h:144:74: warning: unused parameter ‘ser’ [-Wunused-parameter]
  144 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERJSON& ser) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:521:22:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalSumKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:140:58:   required from here
/usr/local/include/palisade/core/utils/serial.h:132:78: warning: unused parameter ‘ser’ [-Wunused-parameter]
  132 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERJSON& ser) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:564:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalSumKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:144:47:   required from here
/usr/local/include/palisade/core/utils/serial.h:144:74: warning: unused parameter ‘ser’ [-Wunused-parameter]
  144 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERJSON& ser) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext-ser.h:72:20:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalMultKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:157:76:   required from here
/usr/local/include/palisade/core/utils/serial.h:132:78: warning: unused parameter ‘ser’ [-Wunused-parameter]
  132 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERJSON& ser) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:460:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalMultKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:162:65:   required from here
/usr/local/include/palisade/core/utils/serial.h:144:74: warning: unused parameter ‘ser’ [-Wunused-parameter]
  144 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERJSON& ser) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:521:22:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalSumKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:164:76:   required from here
/usr/local/include/palisade/core/utils/serial.h:132:78: warning: unused parameter ‘ser’ [-Wunused-parameter]
  132 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERJSON& ser) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:564:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalSumKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:169:65:   required from here
/usr/local/include/palisade/core/utils/serial.h:144:74: warning: unused parameter ‘ser’ [-Wunused-parameter]
  144 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERJSON& ser) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext-ser.h:72:20:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalMultKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:182:76:   required from here
/usr/local/include/palisade/core/utils/serial.h:132:78: warning: unused parameter ‘ser’ [-Wunused-parameter]
  132 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERJSON& ser) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:460:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalMultKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:187:65:   required from here
/usr/local/include/palisade/core/utils/serial.h:144:74: warning: unused parameter ‘ser’ [-Wunused-parameter]
  144 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERJSON& ser) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:521:22:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalSumKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:189:76:   required from here
/usr/local/include/palisade/core/utils/serial.h:132:78: warning: unused parameter ‘ser’ [-Wunused-parameter]
  132 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERJSON& ser) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERJSON&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:564:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalSumKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERJSON; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:194:65:   required from here
/usr/local/include/palisade/core/utils/serial.h:144:74: warning: unused parameter ‘ser’ [-Wunused-parameter]
  144 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERJSON& ser) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext-ser.h:72:20:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalMultKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:259:60:   required from here
/usr/local/include/palisade/core/utils/serial.h:85:80: warning: unused parameter ‘st’ [-Wunused-parameter]
   85 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERBINARY& st) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:460:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalMultKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:263:69:   required from here
/usr/local/include/palisade/core/utils/serial.h:97:76: warning: unused parameter ‘st’ [-Wunused-parameter]
   97 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERBINARY& st) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:521:22:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalSumKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:265:60:   required from here
/usr/local/include/palisade/core/utils/serial.h:85:80: warning: unused parameter ‘st’ [-Wunused-parameter]
   85 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERBINARY& st) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:564:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalSumKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:269:69:   required from here
/usr/local/include/palisade/core/utils/serial.h:97:76: warning: unused parameter ‘st’ [-Wunused-parameter]
   97 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERBINARY& st) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext-ser.h:72:20:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalMultKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:284:60:   required from here
/usr/local/include/palisade/core/utils/serial.h:85:80: warning: unused parameter ‘st’ [-Wunused-parameter]
   85 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERBINARY& st) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:460:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalMultKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:289:69:   required from here
/usr/local/include/palisade/core/utils/serial.h:97:76: warning: unused parameter ‘st’ [-Wunused-parameter]
   97 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERBINARY& st) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:521:22:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalSumKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:292:60:   required from here
/usr/local/include/palisade/core/utils/serial.h:85:80: warning: unused parameter ‘st’ [-Wunused-parameter]
   85 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERBINARY& st) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:564:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalSumKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:297:69:   required from here
/usr/local/include/palisade/core/utils/serial.h:97:76: warning: unused parameter ‘st’ [-Wunused-parameter]
   97 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERBINARY& st) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext-ser.h:72:20:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalMultKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:312:60:   required from here
/usr/local/include/palisade/core/utils/serial.h:85:80: warning: unused parameter ‘st’ [-Wunused-parameter]
   85 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERBINARY& st) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::allocator<std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:460:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalMultKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:317:69:   required from here
/usr/local/include/palisade/core/utils/serial.h:97:76: warning: unused parameter ‘st’ [-Wunused-parameter]
   97 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERBINARY& st) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Serialize(const T&, std::ostream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::ostream = std::basic_ostream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:521:22:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::SerializeEvalSumKey(std::ostream&, const ST&, std::string) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::ostream = std::basic_ostream<char>; std::string = std::__cxx11::basic_string<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:320:60:   required from here
/usr/local/include/palisade/core/utils/serial.h:85:80: warning: unused parameter ‘st’ [-Wunused-parameter]
   85 |   void Serialize(const T& obj, std::ostream& stream, const SerType::SERBINARY& st) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/usr/local/include/palisade/core/utils/serial.h: In instantiation of ‘void lbcrypto::Serial::Deserialize(T&, std::istream&, const lbcrypto::SerType::SERBINARY&) [with T = std::map<std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<std::map<unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::shared_ptr<lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > > > > > > > > >; std::istream = std::basic_istream<char>]’:
/usr/local/include/palisade/pke/cryptocontext.h:564:24:   required from ‘static bool lbcrypto::CryptoContextImpl<Element>::DeserializeEvalSumKey(std::istream&, const ST&) [with ST = lbcrypto::SerType::SERBINARY; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; std::istream = std::basic_istream<char>]’
/usr/local/include/palisade/pke/cryptocontext-ser.h:325:69:   required from here
/usr/local/include/palisade/core/utils/serial.h:97:76: warning: unused parameter ‘st’ [-Wunused-parameter]
   97 |   void Deserialize(T& obj, std::istream& stream, const SerType::SERBINARY& st) {
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/include/palisade/pke/pubkeylp.h:40,
                 from /usr/local/include/palisade/pke/palisade.h:66,
                 from src/../../../palisade_header.h:6,
                 from src/host_data.h:6,
                 from src/host_kernel.h:4,
                 from src/host_kernel.cpp:6:
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoContextImpl<Element>::TypeCheck(lbcrypto::ConstCiphertext<Element>, lbcrypto::ConstCiphertext<Element>, const char*, const char*, size_t) const [with Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; lbcrypto::ConstCiphertext<Element> = const std::shared_ptr<const lbcrypto::CiphertextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; size_t = long unsigned int]’:
/usr/local/include/palisade/pke/cryptocontext.h:1479:5:   required from ‘lbcrypto::Ciphertext<Element> lbcrypto::CryptoContextImpl<Element>::EvalAdd(lbcrypto::ConstCiphertext<Element>, lbcrypto::ConstCiphertext<Element>) const [with Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; lbcrypto::Ciphertext<Element> = std::shared_ptr<lbcrypto::CiphertextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; lbcrypto::ConstCiphertext<Element> = const std::shared_ptr<const lbcrypto::CiphertextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >]’
src/host_kernel.cpp:139:161:   required from here
/usr/local/include/palisade/core/utils/caller_info.h:73:17: warning: unused parameter ‘callerFile’ [-Wunused-parameter]
   73 |     const char* callerFile = "", \
      |     ~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/local/include/palisade/pke/cryptocontext.h:122:18: note: in expansion of macro ‘CALLER_INFO_ARGS_HDR’
  122 |                  CALLER_INFO_ARGS_HDR) const {
      |                  ^~~~~~~~~~~~~~~~~~~~
/usr/local/include/palisade/core/utils/caller_info.h:74:17: warning: unused parameter ‘callerFunc’ [-Wunused-parameter]
   74 |     const char* callerFunc = "", \
      |     ~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/local/include/palisade/pke/cryptocontext.h:122:18: note: in expansion of macro ‘CALLER_INFO_ARGS_HDR’
  122 |                  CALLER_INFO_ARGS_HDR) const {
      |                  ^~~~~~~~~~~~~~~~~~~~
/usr/local/include/palisade/core/utils/caller_info.h:75:17: warning: unused parameter ‘callerLine’ [-Wunused-parameter]
   75 |     size_t      callerLine = 0
      |     ~~~~~~~~~~~~^~~~~~~~~~~~~~
/usr/local/include/palisade/pke/cryptocontext.h:122:18: note: in expansion of macro ‘CALLER_INFO_ARGS_HDR’
  122 |                  CALLER_INFO_ARGS_HDR) const {
      |                  ^~~~~~~~~~~~~~~~~~~~
/usr/local/include/palisade/pke/cryptocontext.h: In instantiation of ‘void lbcrypto::CryptoContextImpl<Element>::TypeCheck(lbcrypto::ConstCiphertext<Element>, lbcrypto::ConstPlaintext, const char*, const char*, size_t) const [with Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; lbcrypto::ConstCiphertext<Element> = const std::shared_ptr<const lbcrypto::CiphertextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; lbcrypto::ConstPlaintext = std::shared_ptr<const lbcrypto::PlaintextImpl>; size_t = long unsigned int]’:
/usr/local/include/palisade/pke/cryptocontext.h:1663:5:   required from ‘lbcrypto::Ciphertext<Element> lbcrypto::CryptoContextImpl<Element>::EvalSub(lbcrypto::ConstCiphertext<Element>, lbcrypto::ConstPlaintext) const [with Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; lbcrypto::Ciphertext<Element> = std::shared_ptr<lbcrypto::CiphertextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; lbcrypto::ConstCiphertext<Element> = const std::shared_ptr<const lbcrypto::CiphertextImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >; lbcrypto::ConstPlaintext = std::shared_ptr<const lbcrypto::PlaintextImpl>]’
src/host_kernel.cpp:163:184:   required from here
/usr/local/include/palisade/core/utils/caller_info.h:73:17: warning: unused parameter ‘callerFile’ [-Wunused-parameter]
   73 |     const char* callerFile = "", \
      |     ~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/local/include/palisade/pke/cryptocontext.h:208:18: note: in expansion of macro ‘CALLER_INFO_ARGS_HDR’
  208 |                  CALLER_INFO_ARGS_HDR) const {
      |                  ^~~~~~~~~~~~~~~~~~~~
/usr/local/include/palisade/core/utils/caller_info.h:74:17: warning: unused parameter ‘callerFunc’ [-Wunused-parameter]
   74 |     const char* callerFunc = "", \
      |     ~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/local/include/palisade/pke/cryptocontext.h:208:18: note: in expansion of macro ‘CALLER_INFO_ARGS_HDR’
  208 |                  CALLER_INFO_ARGS_HDR) const {
      |                  ^~~~~~~~~~~~~~~~~~~~
/usr/local/include/palisade/core/utils/caller_info.h:75:17: warning: unused parameter ‘callerLine’ [-Wunused-parameter]
   75 |     size_t      callerLine = 0
      |     ~~~~~~~~~~~~^~~~~~~~~~~~~~
/usr/local/include/palisade/pke/cryptocontext.h:208:18: note: in expansion of macro ‘CALLER_INFO_ARGS_HDR’
  208 |                  CALLER_INFO_ARGS_HDR) const {
      |                  ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/palisade/pke/palisade.h:61,
                 from src/../../../palisade_header.h:6,
                 from src/host_data.h:6,
                 from src/host_kernel.h:4,
                 from src/host_kernel.cpp:6:
/usr/local/include/palisade/pke/metadata.h: In instantiation of ‘void lbcrypto::Metadata::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::Metadata; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::Metadata; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::Metadata&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::Metadata&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::Metadata&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::Metadata]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::Metadata>’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::Metadata; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/metadata-ser.h:22:1:   required from here
/usr/local/include/palisade/pke/metadata.h:84:22: warning: unused parameter ‘ar’ [-Wunused-parameter]
   84 |   void save(Archive& ar, std::uint32_t const version) const {}
      |             ~~~~~~~~~^~
/usr/local/include/palisade/pke/metadata.h:84:46: warning: unused parameter ‘version’ [-Wunused-parameter]
   84 |   void save(Archive& ar, std::uint32_t const version) const {}
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/metadata.h: In instantiation of ‘void lbcrypto::Metadata::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::Metadata; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::Metadata; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::Metadata&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::Metadata&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::Metadata&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::Metadata]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::Metadata>’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::Metadata; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/metadata-ser.h:22:1:   required from here
/usr/local/include/palisade/pke/metadata.h:90:22: warning: unused parameter ‘ar’ [-Wunused-parameter]
   90 |   void load(Archive& ar, std::uint32_t const version) {
      |             ~~~~~~~~~^~
/usr/local/include/palisade/pke/metadata.h: In instantiation of ‘void lbcrypto::Metadata::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::Metadata; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::Metadata; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::Metadata&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::Metadata&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::Metadata&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::Metadata]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::Metadata>’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::Metadata; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/metadata-ser.h:22:1:   required from here
/usr/local/include/palisade/pke/metadata.h:90:22: warning: unused parameter ‘ar’ [-Wunused-parameter]
/usr/local/include/palisade/pke/metadata.h: In instantiation of ‘void lbcrypto::Metadata::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::Metadata; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::Metadata; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::Metadata&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::Metadata&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::Metadata&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::Metadata]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::Metadata>’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::Metadata; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::Metadata; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/metadata-ser.h:22:1:   required from here
/usr/local/include/palisade/pke/metadata.h:84:22: warning: unused parameter ‘ar’ [-Wunused-parameter]
   84 |   void save(Archive& ar, std::uint32_t const version) const {}
      |             ~~~~~~~~~^~
/usr/local/include/palisade/pke/metadata.h:84:46: warning: unused parameter ‘version’ [-Wunused-parameter]
   84 |   void save(Archive& ar, std::uint32_t const version) const {}
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/metadata.h: In instantiation of ‘void lbcrypto::MetadataTest::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::MetadataTest; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::MetadataTest; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::MetadataTest&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::MetadataTest&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::MetadataTest&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::MetadataTest]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::MetadataTest>’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::MetadataTest; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::MetadataTest; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::MetadataTest; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/metadata-ser.h:24:1:   required from here
/usr/local/include/palisade/pke/metadata.h:184:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  184 |   void save(Archive& ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/metadata.h: In instantiation of ‘void lbcrypto::MetadataTest::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::MetadataTest; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::MetadataTest; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::MetadataTest&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::MetadataTest&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::MetadataTest&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::MetadataTest]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::MetadataTest>’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::MetadataTest; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::MetadataTest; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::MetadataTest; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/metadata-ser.h:24:1:   required from here
/usr/local/include/palisade/pke/metadata.h:184:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/pke/scheme/allscheme.h:27,
                 from /usr/local/include/palisade/pke/cryptocontext.h:34,
                 from /usr/local/include/palisade/pke/palisade.h:69,
                 from src/../../../palisade_header.h:6,
                 from src/host_data.h:6,
                 from src/host_kernel.h:4,
                 from src/host_kernel.cpp:6:
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:311:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  311 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:324:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  324 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:324:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:56:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:311:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  311 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:311:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:324:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  324 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:324:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:57:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:311:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  311 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/pke/palisade.h:66,
                 from src/../../../palisade_header.h:6,
                 from src/host_data.h:6,
                 from src/host_kernel.h:4,
                 from src/host_kernel.cpp:6:
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:512:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  512 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:517:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  517 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:517:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:512:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  512 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:512:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:517:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  517 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:517:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:64:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:512:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  512 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyRelinImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:66:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:737:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  737 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyRelinImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:66:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:737:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyRelinImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:67:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:737:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyRelinImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:67:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:737:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/pke/scheme/allscheme.h:27,
                 from /usr/local/include/palisade/pke/cryptocontext.h:34,
                 from /usr/local/include/palisade/pke/palisade.h:69,
                 from src/../../../palisade_header.h:6,
                 from src/host_data.h:6,
                 from src/host_kernel.h:4,
                 from src/host_kernel.cpp:6:
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:77:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:311:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  311 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:77:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:324:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  324 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:77:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:324:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/rlwe.h: In instantiation of ‘void lbcrypto::LPCryptoParametersRLWE<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersRLWE<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:77:1:   required from here
/usr/local/include/palisade/pke/scheme/rlwe.h:311:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  311 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/pke/palisade.h:66,
                 from src/../../../palisade_header.h:6,
                 from src/host_data.h:6,
                 from src/host_kernel.h:4,
                 from src/host_kernel.cpp:6:
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:512:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  512 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:517:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  517 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:517:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:79:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:512:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  512 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyRelinImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:80:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:737:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  737 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/pubkeylp.h: In instantiation of ‘void lbcrypto::LPEvalKeyRelinImpl<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPEvalKeyRelinImpl<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/pubkeylp-ser.h:80:1:   required from here
/usr/local/include/palisade/pke/pubkeylp.h:737:46: warning: unused parameter ‘version’ [-Wunused-parameter]
In file included from /usr/local/include/palisade/pke/scheme/allscheme.h:31,
                 from /usr/local/include/palisade/pke/cryptocontext.h:34,
                 from /usr/local/include/palisade/pke/palisade.h:69,
                 from src/../../../palisade_header.h:6,
                 from src/host_data.h:6,
                 from src/host_kernel.h:4,
                 from src/host_kernel.cpp:6:
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:58:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:322:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  322 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:58:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:322:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:59:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:322:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:59:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:322:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:60:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:322:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:60:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:322:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:62:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1047:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1047 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:62:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1052:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1052 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:62:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1052:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:62:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1047:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1047 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1047:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1052:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1052 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1052:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::PolyImpl<bigintnat::NativeVector<bigintnat::NativeIntegerT<long unsigned int> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:63:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1047:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1047 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:65:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1047:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:65:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1052:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1052 |   void load(Archive &ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:65:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1052:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfv/bfv.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFV<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFV<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfv/bfv-ser.h:65:1:   required from here
/usr/local/include/palisade/pke/scheme/bfv/bfv.h:1047:46: warning: unused parameter ‘version’ [-Wunused-parameter]
 1047 |   void save(Archive &ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/palisade/pke/scheme/allscheme.h:32,
                 from /usr/local/include/palisade/pke/cryptocontext.h:34,
                 from /usr/local/include/palisade/pke/palisade.h:69,
                 from src/../../../palisade_header.h:6,
                 from src/host_data.h:6,
                 from src/host_kernel.h:4,
                 from src/host_kernel.cpp:6:
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFVrns<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:41:1:   required from here
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h:419:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  419 |   void save(Archive& ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h: In instantiation of ‘void lbcrypto::LPCryptoParametersBFVrns<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPCryptoParametersBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:41:1:   required from here
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h:419:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<Element>::save(Archive&, uint32_t) const [with Archive = cereal::JSONOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONOutputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:981:7:   required from ‘void cereal::save(cereal::JSONOutputArchive&, const cereal::NameValuePair<T>&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:460:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1051:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:42:1:   required from here
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h:885:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  885 |   void save(Archive& ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<Element>::load(Archive&, uint32_t) [with Archive = cereal::JSONInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]’
/usr/local/include/palisade/cereal/archives/json.hpp:988:7:   required from ‘void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&]’
/usr/local/include/palisade/cereal/cereal.hpp:859:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/json.hpp:1050:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:42:1:   required from here
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h:890:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  890 |   void load(Archive& ar, std::uint32_t const version) {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<Element>::load(Archive&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:284:55:   required from ‘static decltype (t.load(ar, version)) cereal::access::member_load(Archive&, T&, uint32_t) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.load(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:976:28:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:771:9:   required from ‘void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:654:9:   required from ‘ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:843:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:740:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:329:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:42:1:   required from here
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h:890:46: warning: unused parameter ‘version’ [-Wunused-parameter]
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h: In instantiation of ‘void lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<Element>::save(Archive&, uint32_t) const [with Archive = cereal::PortableBinaryOutputArchive; Element = lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > >; uint32_t = unsigned int]’:
/usr/local/include/palisade/cereal/access.hpp:276:55:   required from ‘static decltype (t.save(ar, version)) cereal::access::member_save(Archive&, const T&, uint32_t) [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; decltype (t.save(ar, version)) = void; uint32_t = unsigned int]’
/usr/local/include/palisade/cereal/cereal.hpp:561:28:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::processImpl(const T&) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_member_versioned_save<T, ArchiveType>::value, (! cereal::traits::has_invalid_output_versioning<T, ArchiveType>::value), (cereal::traits::is_output_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_member_versioned_save<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::sfinae)0; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:372:9:   required from ‘void cereal::OutputArchive<ArchiveType, Flags>::process(T&&) [with T = const lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/cereal.hpp:268:9:   required from ‘ArchiveType& cereal::OutputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {const lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&}; ArchiveType = cereal::PortableBinaryOutputArchive; unsigned int Flags = 1]’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:291:7:   required from ‘typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryOutputArchive; T = const lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >&; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]’
/usr/local/include/palisade/cereal/cereal.hpp:444:39:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:736:39:   required from ‘static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:718:5:   required from ‘struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > > >’
/usr/local/include/palisade/cereal/archives/portable_binary.hpp:328:1:   required by substitution of ‘template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:756:40:   required from ‘void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]’
/usr/local/include/palisade/cereal/details/polymorphic_impl.hpp:770:9:   required from ‘const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = lbcrypto::LPPublicKeyEncryptionSchemeBFVrns<lbcrypto::DCRTPolyImpl<bigintfxd::BigVectorImpl<bigintfxd::BigInteger<unsigned int, 3500> > > >; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]’
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns-ser.h:42:1:   required from here
/usr/local/include/palisade/pke/scheme/bfvrns/bfvrns.h:885:46: warning: unused parameter ‘version’ [-Wunused-parameter]
  885 |   void save(Archive& ar, std::uint32_t const version) const {
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
make[1]: *** [Makefile:127: build/host_kernel.o] Interrupt
make: *** [Makefile:83: release] Interrupt
