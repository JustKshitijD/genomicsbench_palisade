diff -Naur fresh_zlib-1.2.8/deflate.c fresh_zlib_patch/deflate.c
--- fresh_zlib-1.2.8/deflate.c	2016-12-08 10:07:15.000000000 -0500
+++ fresh_zlib_patch/deflate.c	2017-05-12 11:09:07.223261462 -0400
@@ -50,11 +50,17 @@
 /* @(#) $Id$ */
 
 #include "deflate.h"
+#include "stdio.h"
 
+#define USE_IGZIP
 #if defined(CHECK_SSE2) || defined(USE_SSE4_2_CRC_HASH) || defined(USE_QUICK)
 #include "x86.h"
 #endif
 
+#ifdef USE_IGZIP
+#include "igzip_lib.h"
+#endif
+
 const char deflate_copyright[] =
    " deflate 1.2.8.1 Copyright 1995-2013 Jean-loup Gailly and Mark Adler ";
 /*
@@ -382,7 +388,31 @@
     s->strategy = strategy;
     s->method = (Byte)method;
 
-    return deflateReset(strm);
+    int ret =  deflateReset(strm);
+    #ifdef USE_IGZIP
+        if(level ==1){
+            if(s->wrap == 0)
+	        {
+                strm->state->strm = (z_streamp) ZALLOC(strm, 1, sizeof(struct isal_zstream));
+                isal_deflate_init((struct isal_zstream*)strm->state->strm);
+                ((struct isal_zstream*)strm->state->strm)->end_of_stream = 0;
+                ((struct isal_zstream*)strm->state->strm)->hufftables = 0x0;
+                ((struct isal_zstream*)strm->state->strm)->gzip_flag = 0;
+           //     fprintf(stderr,"Init called\n");
+
+            }
+            else if(s->wrap == 2)
+            {
+                 strm->state->strm = (z_streamp) ZALLOC(strm, 1, sizeof(struct isal_zstream));
+                 isal_deflate_init((struct isal_zstream*)strm->state->strm);
+                 ((struct isal_zstream*)strm->state->strm)->end_of_stream = 0;
+                 ((struct isal_zstream*)strm->state->strm)->hufftables = 0x0;
+                 ((struct isal_zstream*)strm->state->strm)->gzip_flag = 1;
+            }
+        }
+
+    #endif
+    return ret;
 }
 
 /* =========================================================================
@@ -755,7 +785,81 @@
     int old_flush; /* value of flush param for previous deflate call */
     deflate_state *s;
 
-    if (deflateStateCheck(strm) || flush > Z_BLOCK || flush < 0) {
+   #ifdef USE_IGZIP
+         s = strm->state;
+
+
+        if( (s->level == 1) && (s->wrap ==0 ) )
+        {
+
+
+        int original_flush = flush;
+
+        if(flush == Z_FINISH || flush == Z_FULL_FLUSH) {
+        flush = FULL_FLUSH;
+        }
+        else if(flush == Z_SYNC_FLUSH ) {
+        flush = SYNC_FLUSH;
+        }
+        else if(flush != Z_NO_FLUSH ){
+        ERR_RETURN(strm, Z_STREAM_ERROR);
+        }
+
+
+
+        if(((struct isal_zstream*)s->strm)->hufftables == 0x0)
+                  {
+                    struct isal_huff_histogram histogram;
+                    struct isal_hufftables *hufftables_custom;
+                    int sixtyfourK = 64*1024;
+                    int usable_buffer= (strm->avail_in < sixtyfourK) ? strm->avail_in : sixtyfourK;
+
+                     hufftables_custom = (struct isal_hufftables*) malloc(sizeof(struct isal_hufftables));
+
+                     memset(&histogram, 0, sizeof(histogram));
+                     isal_update_histogram((unsigned char*)strm->next_in,usable_buffer, &histogram);
+                     isal_create_hufftables(hufftables_custom, &histogram);
+                     ((struct isal_zstream*)s->strm)->hufftables = hufftables_custom;
+             }
+
+
+            ((struct isal_zstream *)s->strm)->next_in = strm->next_in;
+            ((struct isal_zstream *)s->strm)->avail_in = strm->avail_in;
+            ((struct isal_zstream *)s->strm)->avail_out = strm->avail_out;
+            ((struct isal_zstream *)s->strm)->next_out = strm->next_out;
+            ((struct isal_zstream *)s->strm)->flush = flush;
+            //((struct isal_zstream *)s->strm)->total_out = strm->total_out;
+            //((struct isal_zstream *)s->strm)->total_in = strm->total_in;
+
+            if(flush == Z_FINISH)((struct isal_zstream *)s->strm)->end_of_stream = 1;
+
+            //printf("Next_in =  %p, Next_out = %p, Avail_in = %d, Avail_out = %d\n",strm->next_in, strm->next_out, strm->avail_in, strm->avail_out);
+
+          //   fprintf(stderr, "flush = %d, avail_in = %d, avail_out = %d\n", flush, strm->avail_in, strm->avail_out);
+
+             int ret = isal_deflate_stateless((struct isal_zstream*)s->strm);
+
+          //   strm->avail_in = ((struct isal_zstream *)s->strm)->avail_in;
+             strm->next_in = ((struct isal_zstream *)s->strm)->next_in;
+  //           strm->avail_out = ((struct isal_zstream *)s->strm)->avail_out;
+             strm->next_out = ((struct isal_zstream *)s->strm)->next_out;
+          //   strm->total_out =((struct isal_zstream *)s->strm)->total_out;
+           //  strm->total_in =((struct isal_zstream *)s->strm)->total_in;
+
+            // fprintf(stderr, "flush = %d, isal-ret = %d, avail_in = %d, avail_out = %d\n", flush, ret, strm->avail_in, strm->avail_out);
+             if(original_flush == Z_FINISH && ret == COMP_OK) ret = Z_STREAM_END;
+
+             return ret;
+
+
+         }
+
+    #endif
+
+
+    //fprintf(stderr, "flush = %d, avail_in = %d, avail_out = %d\n", flush, strm->avail_in, strm->avail_out);
+
+   if (deflateStateCheck(strm) || flush > Z_BLOCK || flush < 0) {
         return Z_STREAM_ERROR;
     }
     s = strm->state;
@@ -1076,6 +1180,21 @@
 {
     int status;
 
+    #ifdef USE_IGZIP
+        if(strm->state->level ==1 &&  ( (strm->state->wrap == 0 ) ) )
+        {
+          /* Deallocate in reverse order of allocations: */
+          TRY_FREE(strm, strm->state->pending_buf);
+          TRY_FREE(strm, strm->state->head);
+          TRY_FREE(strm, strm->state->prev);
+          TRY_FREE(strm, strm->state->window);
+          ZFREE(strm, strm->state->strm);
+          ZFREE(strm, strm->state);
+          strm->state = Z_NULL;
+          return Z_OK;
+        }
+    #endif
+
     if (deflateStateCheck(strm)) return Z_STREAM_ERROR;
 
     status = strm->state->status;
diff -Naur fresh_zlib-1.2.8/Makefile.in fresh_zlib_patch/Makefile.in
--- fresh_zlib-1.2.8/Makefile.in	2016-12-08 10:07:15.000000000 -0500
+++ fresh_zlib_patch/Makefile.in	2017-05-12 11:09:45.919261448 -0400
@@ -26,7 +26,7 @@
 
 SFLAGS=-O
 LDFLAGS=
-TEST_LDFLAGS=-L. libz.a
+TEST_LDFLAGS=-L. libz.a libisal.a
-LDSHARED=$(CC)
+LDSHARED=gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
 CPP=$(CC) -E
 
@@ -318,7 +318,7 @@
 
 
 placebo $(SHAREDLIBV): $(PIC_OBJS) libz.a
-	$(LDSHARED) $(SFLAGS) -o $@ $(PIC_OBJS) $(LDSHAREDLIBC) $(LDFLAGS)
+	$(LDSHARED) $(SFLAGS) -o $@ $(PIC_OBJS) $(LDSHAREDLIBC) $(TEST_LDFLAGS)
 	rm -f $(SHAREDLIB) $(SHAREDLIBM)
 	ln -s $@ $(SHAREDLIB)
 	ln -s $@ $(SHAREDLIBM)
